<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attaches="clr-namespace:OhmStudio.UI.Attaches"
                    xmlns:controls="clr-namespace:OhmStudio.UI.Controls"
                    xmlns:converters="clr-namespace:OhmStudio.UI.Converters">

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBoxBase}">
        <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorder}" />
        <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxText}" />
        <Setter Property="BorderThickness" Value="{DynamicResource InputControlBorderThickness}" />
        <Setter Property="Padding" Value="{DynamicResource InputControlPadding}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="TextBox.TextWrapping" Value="NoWrap" />
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource CommonControlsTextBoxSelection}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <AdornedElementPlaceholder x:Name="AdornedElementPlaceholder" />
                        <StackPanel x:Name="sp"
                                    IsHitTestVisible="False"
                                    Orientation="Horizontal"
                                    Visibility="{Binding ElementName=AdornedElementPlaceholder, Path=AdornedElement.(TextBoxAttach.IsShowValidationErrorInfo), Converter={StaticResource BoolToVisibilityConverter}}">
                            <StackPanel.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="sp"
                                                             Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                             From="0"
                                                             To="1"
                                                             Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </StackPanel.Triggers>
                            <StackPanel.RenderTransform>
                                <ScaleTransform />
                            </StackPanel.RenderTransform>
                            <Path Height="{Binding ElementName=ErrorContent, Path=ActualHeight}"
                                  Data="M256 48C141.1 48 48 141.1 48 256s93.1 208 208 208 208-93.1 208-208S370.9 48 256 48zm17.2 109.6l-3.1 115.1c-.2 8.2-5.9 14.8-14.1 14.8s-13.9-6.6-14.1-14.8l-3.1-115.1c-.2-9.6 7.5-17.6 17.2-17.6 9.6 0 17.4 7.9 17.2 17.6zM256 354c-10.7 0-19.1-8.1-19.1-18.4s8.4-18.4 19.1-18.4c10.7 0 19.1 8.1 19.1 18.4S266.7 354 256 354z"
                                  Fill="{Binding ElementName=ErrorContent, Path=Foreground}"
                                  Stretch="Uniform" />
                            <TextBlock Name="ErrorContent"
                                       Margin="2,0,0,0"
                                       VerticalAlignment="Center"
                                       Foreground="{DynamicResource CommonControlsTextBoxErrorBorder}"
                                       Text="{Binding ErrorContent, Mode=OneTime}" />
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="Cut" />
                    <MenuItem Command="Copy" />
                    <MenuItem Command="Paste" />
                    <MenuItem Command="SelectAll" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <DockPanel>
                        <ContentControl Style="{DynamicResource TitleWithTemplatedParent}" />
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(attaches:BorderAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <controls:SimplePanel>
                                <ScrollViewer Name="PART_ContentHost" />
                                <ContentControl Style="{DynamicResource PlaceHolderWithTemplatedParent}" />
                            </controls:SimplePanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextDisabled}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundHover}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextHover}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundFocused}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextFocused}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderFocused}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <!--
                                OneTime is used to prevent a memory leak since ValidationError doesn't impl INotifyPropertyChanged and gets stored in a static: System.ComponentModel.ReflectTypeDescriptionProvider._propertyCache
                                It holds a reference to the DataContext
                            -->
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Mode=OneTime, Path=(Validation.Errors)[0].ErrorContent}" />
                            <Setter Property="Background" Value="{DynamicResource CommonControlsTextBoxErrorBackground}" />
                            <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxErrorForeground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxErrorBorder}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>