<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attaches="clr-namespace:OhmStudio.UI.Attaches"
                    xmlns:converters="clr-namespace:OhmStudio.UI.Converters">

    <Duration x:Key="ExpandDuration">0:0:0.250</Duration>
    <Duration x:Key="CollapseDuration">0:0:0.200</Duration>

    <KeyTime x:Key="ExpandKeyTime">0:0:0.250</KeyTime>
    <KeyTime x:Key="CollapseKeyTime">0:0:0.200</KeyTime>

    <converters:ExpanderRotateAngleConverter x:Key="ExpanderRotateAngleConverter" />

    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Ellipse x:Name="circle"
                                     Width="19"
                                     Height="19"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="{DynamicResource ExpanderStaticCircleFill}"
                                     Stroke="{DynamicResource ExpanderStaticCircleStroke}" />
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  SnapsToDevicePixels="False"
                                  Stroke="{DynamicResource ExpanderStaticArrowStroke}"
                                  StrokeThickness="2"
                                  UseLayoutRounding="False" />
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderMouseOverCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderMouseOverCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderMouseOverArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderPressedCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderPressedCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderPressedArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderDisabledCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderDisabledCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderDisabledArrowStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ExpanderStaticCircleFill}"
                                         Stroke="{DynamicResource ExpanderStaticCircleStroke}" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="False"
                                      Stroke="{DynamicResource ExpanderStaticArrowStroke}"
                                      StrokeThickness="2"
                                      UseLayoutRounding="False" />
                            </Grid>
                            <ContentPresenter Grid.Column="1"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderMouseOverCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderMouseOverCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderMouseOverArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderPressedCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderPressedCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderPressedArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderDisabledCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderDisabledCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderDisabledArrowStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ExpanderStaticCircleFill}"
                                         Stroke="{DynamicResource ExpanderStaticCircleStroke}" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="False"
                                      Stroke="{DynamicResource ExpanderStaticArrowStroke}"
                                      StrokeThickness="2"
                                      UseLayoutRounding="False" />
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderMouseOverCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderMouseOverCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderMouseOverArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderPressedCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderPressedCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderPressedArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderDisabledCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderDisabledCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderDisabledArrowStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Ellipse x:Name="circle"
                                         Width="19"
                                         Height="19"
                                         HorizontalAlignment="Center"
                                         VerticalAlignment="Center"
                                         Fill="{DynamicResource ExpanderStaticCircleFill}"
                                         Stroke="{DynamicResource ExpanderStaticCircleStroke}" />
                                <Path x:Name="arrow"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                      SnapsToDevicePixels="False"
                                      Stroke="{DynamicResource ExpanderStaticArrowStroke}"
                                      StrokeThickness="2"
                                      UseLayoutRounding="False" />
                            </Grid>
                            <ContentPresenter Grid.Row="1"
                                              Margin="0,4,0,0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Top"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="arrow" Property="Data" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderMouseOverCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderMouseOverCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderMouseOverArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderPressedCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderPressedCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderPressedArrowStroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="circle" Property="Stroke" Value="{DynamicResource ExpanderDisabledCircleStroke}" />
                            <Setter TargetName="circle" Property="Fill" Value="{DynamicResource ExpanderDisabledCircleFill}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource ExpanderDisabledArrowStroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpanderBaseStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource SystemColorsControlText}" />
        <!--<Setter Property="Background" Value="Transparent" />-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <!--<Setter Property="BorderBrush" Value="Transparent" />-->
        <!--<Setter Property="BorderThickness" Value="1" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{Binding Path=(attaches:BorderAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            SnapsToDevicePixels="True">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite"
                                          Margin="1"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Header}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          DockPanel.Dock="Top"
                                          IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ExpanderDownHeaderStyle}" />
                            <Border>
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="ContentSiteScaleTransform" />
                                        <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpanderRotateAngleConverter}}" />
                                    </TransformGroup>
                                </Border.LayoutTransform>
                                <ContentPresenter x:Name="ExpandSite"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  DockPanel.Dock="Bottom"
                                                  Focusable="False"
                                                  Visibility="Collapsed">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="{Binding Path=ExpandDirection, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ExpanderRotateAngleConverter}, ConverterParameter=-1}" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </Border>
                        </DockPanel>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Expanded">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0"
                                                             To="1"
                                                             Duration="{DynamicResource ExpandDuration}" />

                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                             From="0"
                                                             To="1"
                                                             Duration="{DynamicResource ExpandDuration}">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite"
                                                                           Storyboard.TargetProperty="Visibility"
                                                                           Duration="0:0:0">
                                                <DiscreteObjectKeyFrame KeyTime="0%" Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition To="Collapsed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="1"
                                                             To="0"
                                                             Duration="{DynamicResource CollapseDuration}" />

                                            <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                                             Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                             From="1"
                                                             To="0"
                                                             Duration="{DynamicResource CollapseDuration}">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase EasingMode="EaseInOut" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite"
                                                                           Storyboard.TargetProperty="Visibility"
                                                                           Duration="{DynamicResource CollapseDuration}">
                                                <DiscreteObjectKeyFrame KeyTime="100%" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0" />

                                        <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                         To="1"
                                                         Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0%" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ExpandSite"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0" />

                                        <DoubleAnimation Storyboard.TargetName="ContentSiteScaleTransform"
                                                         Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
                                                         To="0"
                                                         Duration="0" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ExpandSite"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="100%" Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>

                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                        </Trigger>-->
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                            <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                            <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource SystemColorsGrayText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>