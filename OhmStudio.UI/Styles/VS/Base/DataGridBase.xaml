<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attaches="clr-namespace:OhmStudio.UI.Attaches"
                    xmlns:converters="clr-namespace:OhmStudio.UI.Converters">

    <converters:GridLinesVisibilityBorderToThicknessConverter x:Key="GridLinesVisibilityBorderToThicknessConverter" />

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="Button">
        <Setter Property="BorderBrush" Value="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
        <Setter Property="BorderThickness" Value="{Binding GridLinesVisibility, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource GridLinesVisibilityBorderToThicknessConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <Polygon x:Name="Arrow"
                                 Margin="8,8,3,3"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom"
                                 Fill="{DynamicResource CommonControlsButtonText}"
                                 Opacity="0.5"
                                 Points="0,10 10,10 10,0"
                                 Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsButtonHover}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource CommonControlsButtonHoverText}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsButtonPressed}" />
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource CommonControlsButtonPressedText}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridBaseStyle" TargetType="DataGrid">
        <Setter Property="DataGridAttach.ApplyDataGridColumnStyles" Value="True" />
        <Setter Property="DataGridAttach.AutoGeneratedTextStyle" Value="{DynamicResource {x:Type TextBlock}}" />
        <Setter Property="DataGridAttach.AutoGeneratedCheckBoxStyle" Value="{DynamicResource CheckBoxColumnElement}" />
        <Setter Property="DataGridAttach.AutoGeneratedComboBoxStyle" Value="{DynamicResource ComboBoxColumnElement}" />
        <Setter Property="DataGridAttach.AutoGeneratedEditingTextStyle" Value="{DynamicResource TextColumnEditingElement}" />
        <Setter Property="DataGridAttach.AutoGeneratedEditingCheckBoxStyle" Value="{DynamicResource CheckBoxColumnEditingElement}" />
        <Setter Property="DataGridAttach.AutoGeneratedEditingComboBoxStyle" Value="{DynamicResource ComboBoxColumnEditingElement}" />

        <Setter Property="DataGridAttach.TextColumnElementStyle" Value="{DynamicResource {x:Type TextBlock}}" />
        <Setter Property="DataGridAttach.CheckBoxColumnElementStyle" Value="{DynamicResource CheckBoxColumnElement}" />
        <Setter Property="DataGridAttach.ComboBoxColumnElementStyle" Value="{DynamicResource ComboBoxColumnElement}" />
        <Setter Property="DataGridAttach.TextColumnEditingElementStyle" Value="{DynamicResource TextColumnEditingElement}" />
        <Setter Property="DataGridAttach.CheckBoxColumnEditingElementStyle" Value="{DynamicResource CheckBoxColumnEditingElement}" />
        <Setter Property="DataGridAttach.ComboBoxColumnEditingElementStyle" Value="{DynamicResource ComboBoxColumnEditingElement}" />

        <Setter Property="Foreground" Value="{DynamicResource CommonControlsCheckBoxText}" />
        <Setter Property="Foreground" Value="{DynamicResource CommonControlsCheckBoxText}" />
        <Setter Property="Background" Value="{DynamicResource GridViewBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource GridViewBorder}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource HeaderSeparatorLine}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource HeaderSeparatorLine}" />
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="Background" Value="{DynamicResource GridViewFocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource GridViewFocusedBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridRowHeaderBaseStyle" TargetType="DataGridRowHeader">
        <Setter Property="Padding" Value="2,1" />
        <Setter Property="Background" Value="{DynamicResource ContextMenuBackground}" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=DataGridRow}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource ProgressBarProgress}" />
                <Setter Property="Foreground" Value="White" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="DataGridRowBaseStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CommonControlsButtonHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="DataGridCellBaseStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource CommonControlsButtonHover}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CommonControlsButtonHover}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>

    <Storyboard x:Key="Ascending">
        <DoubleAnimation Storyboard.TargetName="rtf"
                         Storyboard.TargetProperty="Angle"
                         From="1"
                         To="180"
                         Duration="0:0:0.1" />
    </Storyboard>
    <Storyboard x:Key="Descending">
        <DoubleAnimation Storyboard.TargetName="rtf"
                         Storyboard.TargetProperty="Angle"
                         From="180"
                         To="0"
                         Duration="0:0:0.1" />
    </Storyboard>

    <Style x:Key="DataGridColumnHeaderBaseStyle" TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource HeaderDefault}" />
        <Setter Property="BorderBrush" Value="{DynamicResource HeaderSeparatorLine}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Foreground" Value="{DynamicResource HeaderDefaultText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Border Name="HeaderBorder"
                                Padding="{TemplateBinding Padding}"
                                Background="Transparent"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Path Name="PathSortDirection"
                                      Grid.Column="1"
                                      Margin="4,0,0,0"
                                      VerticalAlignment="Center"
                                      Data="{StaticResource DownArrowGeometry}"
                                      Fill="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5,0.5" />
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
                               HorizontalAlignment="Left"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                        <Thumb x:Name="PART_RightHeaderGripper"
                               HorizontalAlignment="Right"
                               Style="{StaticResource GridViewColumnHeaderGripper}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HeaderMouseOver}" />
                            <Setter Property="Foreground" Value="{DynamicResource HeaderMouseOverText}" />
                            <!--<Setter TargetName="arrowPath" Property="Fill" Value="{DynamicResource HeaderMouseOverGlyph}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HeaderMouseDown}" />
                            <Setter Property="Foreground" Value="{DynamicResource HeaderMouseDownText}" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="22" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource HeaderDisabledText}" />
                        </Trigger>

                        <Trigger Property="SortDirection" Value="{x:Null}">
                            <Setter TargetName="PathSortDirection" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="PathSortDirection" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Ascending}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Descending}"/>
                            </Trigger.ExitActions>-->
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="PathSortDirection" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="0" />
                                </Setter.Value>
                            </Setter>
                            <!--<Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Descending}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Ascending}"/>
                            </Trigger.ExitActions>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>