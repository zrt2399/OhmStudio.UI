<UserControl x:Class="OhmStudio.UI.Views.PasswordTextBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:attaches="clr-namespace:OhmStudio.UI.Attaches"
             xmlns:converters="clr-namespace:OhmStudio.UI.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:OhmStudio.UI.Views"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             Padding="{DynamicResource InputControlPadding}"
             VerticalContentAlignment="Center"
             d:Width="120"
             Background="{DynamicResource CommonControlsTextBoxBackground}"
             BorderBrush="{DynamicResource CommonControlsTextBoxBorder}"
             BorderThickness="1"
             Focusable="True"
             Foreground="{DynamicResource CommonControlsTextBoxText}"
             mc:Ignorable="d">

    <UserControl.Resources>

        <converters:VisibilityToBoolConverter x:Key="VisibilityToBoolConverter" />

        <Style x:Key="CheckBoxStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="#FFABADB3" />
            <Setter Property="Margin" Value="0,0,3,0" />
            <!--<Setter Property="Cursor" Value="Hand"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <TextBlock Name="textBlock"
                                   Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Margin}"
                                   VerticalAlignment="Center"
                                   FontFamily="/OhmStudio.UI;component/Fonts/#iconfont"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                   ToolTip="{x:Null}" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textBlock" Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="textBlock" Property="Opacity" Value="0.5" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PasswordVisibleStyle"
               BasedOn="{StaticResource {x:Type TextBox}}"
               TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=UserControl}}" />

            <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(attaches:BorderAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <ContentControl Margin="{TemplateBinding Padding}" Style="{DynamicResource PlaceHolderWithUserControl}" />
                                <CheckBox Grid.Column="1"
                                          Content="&#xe603;"
                                          IsChecked="{Binding IsCleared, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                                          Style="{StaticResource CheckBoxStyle}"
                                          ToolTip="清除"
                                          Visibility="{Binding ClearVisibility, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" />
                                <CheckBox Grid.Column="2"
                                          Content="&#xe6f9;"
                                          IsChecked="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                                          Style="{StaticResource CheckBoxStyle}"
                                          ToolTip="隐藏密码"
                                          Visibility="{Binding CanShowPasswordVisibility, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundDisabled}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextDisabled}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderDisabled}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundHover}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextHover}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundFocused}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextFocused}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderFocused}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PasswordBoxCollapsedStyle"
               BasedOn="{StaticResource {x:Type PasswordBox}}"
               TargetType="PasswordBox">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=UserControl}}" />

            <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="BorderThickness" Value="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=UserControl}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding Path=(attaches:BorderAttach.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <ContentControl Margin="{TemplateBinding Padding}" Style="{DynamicResource PlaceHolderWithUserControl}" />
                                <CheckBox Grid.Column="1"
                                          Content="&#xe603;"
                                          IsChecked="{Binding IsCleared, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                                          Style="{StaticResource CheckBoxStyle}"
                                          ToolTip="清除"
                                          Visibility="{Binding ClearVisibility, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" />
                                <CheckBox Grid.Column="2"
                                          Content="&#xe6fb;"
                                          IsChecked="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}"
                                          Style="{StaticResource CheckBoxStyle}"
                                          ToolTip="显示密码"
                                          Visibility="{Binding CanShowPasswordVisibility, RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundDisabled}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextDisabled}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderDisabled}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundHover}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextHover}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundFocused}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextFocused}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderFocused}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <UserControl.Template>
        <ControlTemplate TargetType="UserControl">
            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
        </ControlTemplate>
    </UserControl.Template>

    <DockPanel>
        <ContentControl Style="{DynamicResource TitleWithUserControl}" />
        <Grid>
            <TextBox x:Name="txtTextBox"
                     Style="{StaticResource PasswordVisibleStyle}"
                     Text="{Binding Password, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Visibility="{Binding TbVisibility, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" />
            <PasswordBox x:Name="txtPassword"
                         attaches:PasswordBoxAttach.Password="{Binding Password, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         attaches:PasswordBoxAttach.PasswordAttach="True"
                         x:FieldModifier="public"
                         Style="{StaticResource PasswordBoxCollapsedStyle}"
                         Visibility="{Binding PwVisibility, RelativeSource={RelativeSource AncestorType=UserControl}, Mode=TwoWay}" />
        </Grid>
    </DockPanel>

</UserControl>