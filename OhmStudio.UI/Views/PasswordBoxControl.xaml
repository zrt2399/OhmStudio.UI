<UserControl x:Class="OhmStudio.UI.Views.PasswordBoxControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:OhmStudio.UI.Views"
             xmlns:attachs="clr-namespace:OhmStudio.UI.Attachs"
             xmlns:converters="clr-namespace:OhmStudio.UI.Converters"
             mc:Ignorable="d"
             Focusable="True"
             d:DesignWidth="150">

    <UserControl.Resources>

        <converters:VisibilityToBoolConverter x:Key="VisibilityToBoolConverter"/>

        <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FFABADB3"/>
            <Setter Property="Margin" Value="0,0,3,0"/>
            <!--<Setter Property="Cursor" Value="Hand"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Content}"
                                   Name="textBlock"
                                   VerticalAlignment="Center"
                                   ToolTip="{x:Null}"
                                   FontFamily="/OhmStudio.UI;component/Fonts/#iconfont"
                                   Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Margin}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="textBlock" Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="textBlock" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="TextBox" x:Key="PasswordVisibleStyle" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <DockPanel>
                            <TextBlock Style="{DynamicResource TitleWithUserControl}"/>
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{DynamicResource PlaceHolderWithUserControl}"/>
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                    <CheckBox Grid.Column="1"
                                              ToolTip="清除"
                                              Style="{StaticResource CheckBoxStyle}"
                                              Content="&#xe603;"
                                              IsChecked="{Binding IsCleared,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}" 
                                              Visibility="{Binding ClearVisibility,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}"/>
                                    <CheckBox Grid.Column="2"
                                              Style="{StaticResource CheckBoxStyle}"
                                              Content="&#xe6f9;"
                                              ToolTip="隐藏密码"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}"
                                              Visibility="{Binding CanShowPasswordVisibility,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundDisabled}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextDisabled}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderDisabled}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundHover}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextHover}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundFocused}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextFocused}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderFocused}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="PasswordBox" x:Key="PasswordBoxCollapsedStyle" BasedOn="{StaticResource {x:Type PasswordBox}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <DockPanel>
                            <TextBlock Style="{DynamicResource TitleWithUserControl}"/>
                            <Border x:Name="Border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{DynamicResource PlaceHolderWithUserControl}"/>
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                    <CheckBox Grid.Column="1"
                                              Style="{StaticResource CheckBoxStyle}"
                                              ToolTip="清除"
                                              Content="&#xe603;"
                                              IsChecked="{Binding IsCleared,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}" 
                                              Visibility="{Binding ClearVisibility,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}"/>
                                    <CheckBox Grid.Column="2"
                                              Style="{StaticResource CheckBoxStyle}"
                                              Content="&#xe6fb;"
                                              ToolTip="显示密码"
                                              IsChecked="{Binding IsChecked,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}"
                                              Visibility="{Binding CanShowPasswordVisibility,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                </Grid>
                            </Border>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundDisabled}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextDisabled}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderDisabled}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundHover}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextHover}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderHover}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource CommonControlsTextBoxBackgroundFocused}" />
                                <Setter Property="Foreground" Value="{DynamicResource CommonControlsTextBoxTextFocused}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource CommonControlsTextBoxBorderFocused}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <TextBox x:Name="txtTextBox"
                 Style="{StaticResource PasswordVisibleStyle}"
                 Visibility="{Binding TbVisibility,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}" 
                 Text="{Binding Password,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <PasswordBox Style="{StaticResource PasswordBoxCollapsedStyle}"
                     x:Name="txtPassword"
                     x:FieldModifier="public"
                     Visibility="{Binding PwVisibility,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay}" 
                     attachs:PasswordBoxAttach.IsEnabled="True"
                     attachs:PasswordBoxAttach.Password="{Binding Password,RelativeSource={RelativeSource AncestorType=UserControl},Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</UserControl>