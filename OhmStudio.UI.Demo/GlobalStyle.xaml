<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <FontFamily x:Key="GlobalFontFamily">/Fonts/OPPOSans-M.ttf#OPPOSans M</FontFamily>

    <FontFamily x:Key="DigitalFontFamily">/Fonts/TexasLED.ttf#Texas LED</FontFamily>

    <system:Double x:Key="GlobalFontSize">12</system:Double>

    <!--<system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">100</system:Double>
    <system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">100</system:Double>-->

    <Style TargetType="ScrollViewer" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}"> 
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/> 
    </Style>
 
    <Style TargetType="PasswordBox" BasedOn="{StaticResource {x:Type PasswordBox}}">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="FontFamily" Value="{DynamicResource GlobalFontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource GlobalFontSize}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <StackPanel.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bd"
                                                         Storyboard.TargetProperty="RenderTransform.ScaleX"
                                                         From="0" To="1" Duration="0:0:0.2"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </StackPanel.Triggers>
                        <AdornedElementPlaceholder />
                        <Border x:Name="bd" IsHitTestVisible="False">
                            <Border.RenderTransform>
                                <ScaleTransform/>
                            </Border.RenderTransform>
                            <TextBlock Foreground="{DynamicResource CommonControlsTextBoxErrorBorder}"
                                       Text="{Binding ErrorContent,Mode=OneTime}"
                                       HorizontalAlignment="Left"/>
                        </Border>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentTextBox" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VerticalSeparatorStyle" TargetType="Separator">
        <Setter Property="Separator.LayoutTransform">
            <Setter.Value>
                <TransformGroup>
                    <!--<TransformGroup.Children>
                                    <TransformCollection>-->
                    <RotateTransform Angle="90"/>
                    <!--</TransformCollection>
                                </TransformGroup.Children>-->
                </TransformGroup>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>