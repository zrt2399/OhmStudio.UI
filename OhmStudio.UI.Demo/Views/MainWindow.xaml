<ChromeWindow x:Class="OhmStudio.UI.Demo.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
              xmlns:converters="clr-namespace:OhmStudio.UI.Demo.Converters"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:demo="clr-namespace:OhmStudio.UI.Demo"
              xmlns:hc="https://handyorg.github.io/handycontrol"
              xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
              xmlns:local="clr-namespace:OhmStudio.UI.Demo.Views"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:omhui="http://ohmstudio.ui.com"
              xmlns:oxy="http://oxyplot.org/wpf"
              xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
              Title="{x:Static demo:App.Name}"
              Width="1280"
              Height="720"
              d:DataContext="{d:DesignInstance Type=local:MainWindow}"
              BorderAttach.CornerRadius="{Binding CornerRadius}"
              Icon="/icon.ico"
              IsShowIcon="True"
              IsShowTitle="True"
              ResizeMode="CanResizeWithGrip"
              SnapsToDevicePixels="{Binding IsAntiAliasing}"
              UseLayoutRounding="{Binding IsAntiAliasing}"
              WindowStartupLocation="CenterScreen"
              mc:Ignorable="d">

    <Window.LayoutTransform>
        <ScaleTransform ScaleX="{Binding WindowScale}" ScaleY="{Binding WindowScale}" />
    </Window.LayoutTransform>

    <Window.Resources>
        <converters:GroupItemConverter x:Key="GroupItemConverter" />
        <ListViewIndexConverter x:Key="ListViewIndexConverter" />
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <BoolToNotVisibilityConverter x:Key="BoolToNotVisibilityConverter" />
    </Window.Resources>

    <ChromeWindow.LeftWindowCommands>
        <StackPanel Orientation="Horizontal">
            <Menu VerticalAlignment="Center">
                <MenuItem Header="文件(F)">
                    <MenuItem Header="新建" />
                    <MenuItem Header="打开" />
                    <MenuItem Header="关闭" />
                </MenuItem>
                <MenuItem Header="视图(V)">
                    <MenuItem Header="新建" />
                    <MenuItem Header="打开" />
                    <MenuItem Header="关闭" />
                </MenuItem>
            </Menu>
            <ToolBarTray VerticalAlignment="Center">
                <ToolBar BandIndex="1">
                    <Button Content="1" ToolTip="新建项目" />
                    <TextBox>新建项目</TextBox>
                    <RadioButton>选择</RadioButton>
                    <CheckBox IsChecked="{Binding IsAntiAliasing}">抗锯齿</CheckBox>
                    <Button Content="2" ToolTip="打开文件" />
                    <Separator />
                    <Button Content="3" ToolTip="保存当前文件" />
                    <Separator />
                    <Button Content="4" ToolTip="保存当前文件" />
                </ToolBar>
                <ToolBar BandIndex="2">
                    <Button Content="5" ToolTip="新建项目" />
                    <Separator />
                    <Button Content="6" ToolTip="打开文件" />
                    <Separator />
                    <Button Content="7" ToolTip="保存当前文件" />
                    <Separator />
                    <ComboBox>
                        <ComboBoxItem IsSelected="True">123</ComboBoxItem>
                        <ComboBoxItem>456</ComboBoxItem>
                        <ComboBoxItem>789</ComboBoxItem>
                        <ComboBoxItem>101112</ComboBoxItem>
                        <ComboBoxItem>131415</ComboBoxItem>
                        <ComboBoxItem>161718</ComboBoxItem>
                    </ComboBox>
                </ToolBar>
            </ToolBarTray>
            <SearchBar VerticalAlignment="Center"
                       Command="{Binding SearchCommand}"
                       TextBoxAttach.PlaceHolder="请输入搜索内容..."
                       TextBoxAttach.Title="搜索：" />
            <!--<CheckComboBox />-->
            <TextBox VerticalAlignment="Center"
                     Text="{Binding GlobalCornerRadius}"
                     TextBoxAttach.Title="全局圆角：" />
        </StackPanel>
    </ChromeWindow.LeftWindowCommands>

    <ChromeWindow.RightWindowCommands>
        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
            <Border VerticalAlignment="Center" IsHitTestVisible="False">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock Margin="4"
                           HorizontalAlignment="Center"
                           FontWeight="Bold"
                           Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
            <ComboBox Margin="6,0"
                      ItemsSource="{Binding FontSizeList}"
                      SelectedItem="{Binding CurrentFontSize}"
                      TextBoxAttach.Title="字体大小：" />
            <ComboBox ItemsSource="{Binding FontFamilyList}"
                      SelectedItem="{Binding CurrentFontFamily}"
                      TextBoxAttach.Title="字体：">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox Margin="6,0"
                      ItemsSource="{Binding Source={EnumBindingSource ThemeType}}"
                      SelectedItem="{Binding CurrentTheme}"
                      TextBoxAttach.Title="主题：" />
            <Border Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                    Background="Purple"
                    CornerRadiusAttach.IsCircular="True">
                <TextBlock HorizontalAlignment="Center" Foreground="White">ad</TextBlock>
            </Border>
            <Button Margin="6,0,0,0" Click="Button_Click_5">登录</Button>
        </StackPanel>

    </ChromeWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockingManager x:Name="dockingManager"
                        AutoHideDelay="0"
                        DocumentWrapPanelAttach.IsMouseWheelWrap="True"
                        DocumentWrapPanelAttach.IsWrap="True"
                        ShowSystemMenu="False">
            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal">
                    <LayoutDocumentPaneGroup>
                        <LayoutDocumentPane>
                            <LayoutDocument Title="Button">
                                <UniformGrid Rows="2">
                                    <Button Click="Button_Click">Click Me</Button>
                                    <Button Click="Button_Click_1">AlertDialog.Show</Button>
                                    <Button Click="Button_Click_2">GC</Button>
                                    <UniformGrid Rows="5">
                                        <Button Margin="4" Click="Button_Click_9">UIMessageTip.Show</Button>
                                        <Button Margin="4" Click="Button_Click_10">UIMessageTip.ShowOk</Button>
                                        <Button Margin="4" Click="Button_Click_11">UIMessageTip.ShowWarning</Button>
                                        <Button Margin="4" Click="Button_Click_12">UIMessageTip.ShowError</Button>
                                        <Button Margin="4" Click="Button_Click_13">UIMessageTip.ShowErrorMultiLine</Button>
                                    </UniformGrid>
                                    <StackPanel>
                                        <Button Margin="4"
                                                HorizontalContentAlignment="Left"
                                                Click="Button_Click_14"
                                                Style="{StaticResource ClassicButton}">
                                            ClassicButton
                                        </Button>
                                        <Button Margin="4"
                                                HorizontalContentAlignment="Center"
                                                Style="{StaticResource DefaultButton}">
                                            DefaultButton
                                        </Button>
                                        <Button Margin="4"
                                                HorizontalContentAlignment="Right"
                                                Style="{StaticResource FlatButtonGreen}">
                                            FlatButtonGreen
                                        </Button>
                                        <Button Margin="4"
                                                HorizontalContentAlignment="Center"
                                                Style="{StaticResource FlatButtonRed}">
                                            FlatButtonRed
                                        </Button>
                                    </StackPanel>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="DataGrid">
                                <UniformGrid Rows="3">
                                    <UniformGrid.Resources>
                                        <CollectionViewSource x:Key="ItemCollectionViewSource"
                                                              IsLiveGroupingRequested="True"
                                                              IsLiveSortingRequested="True"
                                                              Source="{Binding ProNodes}">
                                            <CollectionViewSource.GroupDescriptions>
                                                <PropertyGroupDescription PropertyName="Name" />

                                            </CollectionViewSource.GroupDescriptions>
                                            <CollectionViewSource.SortDescriptions>
                                                <!--  Requires 'xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"' declaration.  -->
                                                <scm:SortDescription PropertyName="Name" />
                                                <scm:SortDescription PropertyName="Value" />
                                                <scm:SortDescription PropertyName="Description" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>
                                    </UniformGrid.Resources>
                                    <DataGrid AutoGenerateColumns="False"
                                              CanUserAddRows="False"
                                              DataGridAttach.IsSelectionChangedUpdateRowNumber="True"
                                              DataGridAttach.IsShowRowNumber="True"
                                              DataGridAttach.TextColumnEditingElementStyle="{StaticResource TextColumnEditingElement}"
                                              DataGridAttach.TextColumnElementStyle="{DynamicResource {x:Type TextBlock}}"
                                              ItemsSource="{Binding Source={StaticResource ItemCollectionViewSource}}"
                                              VirtualizingPanel.IsVirtualizing="True"
                                              VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                              VirtualizingPanel.VirtualizationMode="Recycling">
                                        <!--  定义需要显示的列  -->
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Value" />
                                            <DataGridTextColumn Binding="{Binding Password}"
                                                                DataGridColumnAttach.IsIgnoreElementStyle="True"
                                                                ElementStyle="{StaticResource TextBlockPassword}"
                                                                Header="密码" />
                                            <DataGridTemplateColumn Header="密码">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <PasswordTextBox BorderThickness="0" Password="{Binding Password}" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTemplateColumn Header="时间">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <DateTimePicker BorderThickness="0" Foreground="IndianRed" />
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                        <DataGrid.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="GroupItem">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="GroupItem">
                                                                    <Expander Background="{DynamicResource DataGridGroupItemHeaderBackground}" IsExpanded="{Binding Path=Items[0].IsExpanded, FallbackValue=True, TargetNullValue=True}">
                                                                        <Expander.Header>
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <TextBlock Margin="0,0,20,0" Text="{Binding Path=Name, StringFormat=分组：{0}}" />
                                                                                <TextBlock Text="{Binding Path=ItemCount, StringFormat=数量：{0}}" />
                                                                            </StackPanel>
                                                                        </Expander.Header>
                                                                        <ItemsPresenter />
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </DataGrid.GroupStyle>
                                        <!--<DataGrid.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Margin" Value="0,0,0,5"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                    <Expander IsExpanded="True" Background="#FF112255" BorderBrush="#FF002255" Foreground="#FFEEEEEE" BorderThickness="1,1,1,5">
                                                                        <Expander.Header>
                                                                            <DockPanel>
                                                                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                                                                <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                                                            </DockPanel>
                                                                        </Expander.Header>
                                                                        <Expander.Content>
                                                                            <ItemsPresenter />
                                                                        </Expander.Content>
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel Background="LightBlue">
                                                            <TextBlock Text="{Binding Path=Name }" Foreground="Blue" Margin="30,0,0,0" Width="100"/>
                                                            <TextBlock Text="{Binding Path=ItemCount}" Foreground="Blue"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </DataGrid.GroupStyle>-->
                                        <DataGrid.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Click="MenuItem_Click" Header="全部展开" />
                                                <MenuItem Click="MenuItem_Click_1" Header="全部折叠" />
                                            </ContextMenu>
                                        </DataGrid.ContextMenu>
                                    </DataGrid>
                                    <DataGrid DataGridAttach.IsShowRowNumber="True"
                                              ItemsSource="{Binding ProNodes}"
                                              RowDetailsVisibilityMode="VisibleWhenSelected"
                                              ScrollViewerAttach.Orientation="Horizontal">
                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <DropShadowControl Margin="4"
                                                                   Background="Orange"
                                                                   ShadowColor="Orange">
                                                    <TextBlock Text="{Binding InstrumentType}" />
                                                </DropShadowControl>
                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>
                                    </DataGrid>
                                    <DataGrid AutoGenerateColumns="False"
                                              CanUserAddRows="False"
                                              DataGridAttach.CheckBoxColumnEditingElementStyle="{DynamicResource {x:Type CheckBox}}"
                                              DataGridAttach.CheckBoxColumnElementStyle="{DynamicResource {x:Type CheckBox}}"
                                              DataGridAttach.ComboBoxColumnEditingElementStyle="{DynamicResource {x:Type ComboBox}}"
                                              DataGridAttach.ComboBoxColumnElementStyle="{DynamicResource {x:Type ComboBox}}"
                                              DataGridAttach.IsShowRowNumber="True"
                                              DataGridAttach.TextColumnEditingElementStyle="{StaticResource TextColumnEditingElement}"
                                              DataGridAttach.TextColumnElementStyle="{DynamicResource {x:Type TextBlock}}"
                                              ItemsSource="{Binding ProNodes}"
                                              SelectionUnit="CellOrRowHeader">
                                        <DataGrid.Columns>
                                            <!--<DataGridHyperlinkColumn Header="Header" Binding="{Binding Name}"></DataGridHyperlinkColumn>-->
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                            <DataGridCheckBoxColumn Binding="{Binding IsExpanded}" Header="IsExpanded" />
                                            <DataGridComboBoxColumn Header="Name1" ItemsSource="{EnumBindingSource local:InstrumentType}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="RollBox">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <RollBox Name="rollBox" RollingInterval="3">
                                        <RollBox.ItemsSource>
                                            <!--<Image Source="https://pic4.zhimg.com/v2-177d137cb3266e217cc0bb45c2e5b1ef_r.jpg" />
                                            <Image Source="https://pic3.zhimg.com/v2-1260ce85d93a13a45a3bd7b224634222_r.jpg" />-->
                                            <Image Source="https://pica.zhimg.com/v2-a23f3078d20eba31f367a605cdb94c14_r.jpg?source=1940ef5c" />
                                            <Image Source="/Images/1.jpg" />
                                            <Image Source="/Images/1a.jpg" />
                                            <Image Source="/Images/1b.jpg" />
                                            <Image Source="/Images/2.jpg" />
                                            <Image Source="/Images/2a.jpg" />
                                            <Image Source="/Images/3.jpg" />
                                            <Image Source="/Images/3a.jpg" />
                                            <Button>Button</Button>
                                            <UniformGrid Columns="1" Rows="2">
                                                <Button>Button1</Button>
                                                <Button>Button2</Button>
                                            </UniformGrid>
                                        </RollBox.ItemsSource>
                                    </RollBox>
                                    <Button Grid.Row="1" Click="Button_Click_15">切换ItemsSource</Button>
                                    <TextBlock Grid.Row="2" Text="{Binding ElementName=rollBox, Path=RollingInterval, StringFormat=当前滚动间隔：{0}s}" />
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="TextEditor">
                                <TabControl>
                                    <TabItem Header="XML">
                                        <avalonEdit:TextEditor x:Name="textEditorxml"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="XML" />
                                    </TabItem>
                                    <TabItem Header="C#">
                                        <avalonEdit:TextEditor x:Name="textEditorcs"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C#" />
                                    </TabItem>
                                    <TabItem Header="C++">
                                        <avalonEdit:TextEditor x:Name="textEditorcpp"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C++" />
                                    </TabItem>
                                </TabControl>
                            </LayoutDocument>
                            <LayoutDocument Title="ProgressBar">
                                <UniformGrid Rows="2">
                                    <GroupBox Margin="10" Header="ProgressBar">
                                        <UniformGrid>
                                            <ProgressBar Height="50"
                                                         VerticalAlignment="Center"
                                                         IsIndeterminate="True"
                                                         Style="{x:Null}"
                                                         Value="50" />

                                            <ProgressBar Orientation="Vertical"
                                                         ProgressBarAttach.Text="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Value, StringFormat=当前总进度：{0}%}"
                                                         Value="60" />

                                            <ProgressBar Height="50"
                                                         VerticalAlignment="Center"
                                                         IsIndeterminate="True"
                                                         Value="50" />
                                            <ProgressBar VerticalAlignment="Center"
                                                         ProgressBarAttach.Text="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Value, StringFormat=当前总进度：{0}%}"
                                                         Value="60" />
                                        </UniformGrid>
                                    </GroupBox>

                                    <GroupBox Margin="10" Header="CircleProgressBar">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Slider IsSnapToTickEnabled="True"
                                                    Maximum="100"
                                                    Minimum="0"
                                                    TickPlacement="Both"
                                                    Value="{Binding ProgressBarValue}" />
                                            <UniformGrid Grid.Row="1" Rows="2">
                                                <CircleProgressBar BorderBrush="#FF06B025" Value="{Binding ProgressBarValue}" />
                                                <CircleProgressBar Title="进度"
                                                                   HorizontalContentAlignment="Left"
                                                                   VerticalContentAlignment="Top"
                                                                   Value="{Binding ProgressBarValue}" />
                                                <CircleProgressBar BorderBrush="{DynamicResource ProgressBarProgress}" Value="50" />
                                                <CircleProgressBar Title="计划" Value="3.14159" />
                                                <ProgressRing IsActive="True" />
                                            </UniformGrid>
                                        </Grid>
                                    </GroupBox>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="DocumentWrapPanel">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Button Click="Button_Click_8">换行/不换行</Button>
                                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                        <DocumentWrapPanel VerticalAlignment="Top" IsWrap="{Binding DocumentWrapPanelIsWrap}">
                                            <DocumentWrapPanel.Resources>
                                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                                    <Setter Property="Height" Value="100" />
                                                    <Setter Property="Width" Value="100" />
                                                    <Setter Property="Margin" Value="10" />
                                                </Style>
                                            </DocumentWrapPanel.Resources>
                                            <Button>1</Button>
                                            <Button>2</Button>
                                            <Button>3</Button>
                                            <Button>4</Button>
                                            <Button>5</Button>
                                            <Button>6</Button>
                                            <Button>7</Button>
                                            <Button>8</Button>
                                            <Button>9</Button>
                                            <Button>10</Button>
                                            <Button>11</Button>
                                            <Button>12</Button>
                                            <Button>13</Button>
                                            <Button>14</Button>
                                            <Button>15</Button>
                                            <Button>16</Button>
                                            <Button>17</Button>
                                            <Button>18</Button>
                                            <Button>19</Button>
                                            <Button>20</Button>
                                        </DocumentWrapPanel>
                                    </ScrollViewer>
                                    <TextBlock Grid.Row="2" Text="{Binding DocumentWrapPanelIsWrap, StringFormat=是否换行：{0}}" />
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="GifImage">
                                <UniformGrid Columns="2" Rows="2">
                                    <UniformGrid.Resources>
                                        <Style BasedOn="{StaticResource {x:Type GifImage}}" TargetType="GifImage">
                                            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                                            <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                        </Style>
                                    </UniformGrid.Resources>
                                    <GroupBox Margin="10" Header="本地资源">
                                        <GifImage BorderBrush="Green"
                                                  BorderThickness="2"
                                                  Source="/Images/car_chase.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络资源">
                                        <GifImage BorderBrush="Orange"
                                                  BorderThickness="10"
                                                  Source="https://img.lanrentuku.com/img/allimg/1206/5-120601152054-50.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络资源">
                                        <GifImage BorderBrush="YellowGreen"
                                                  BorderThickness="20"
                                                  Source="https://img.lanrentuku.com/img/allimg/1212/5-121204193Q8.gif" />
                                    </GroupBox>
                                    <!--<Image ImageBehavior.AnimatedSource="/Images/car_chase.gif"/>-->
                                    <!--<hc:GifImage Uri="/Images/car_chase.gif"  />-->
                                </UniformGrid>

                            </LayoutDocument>
                            <LayoutDocument Title="UserInfos">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <DataGrid DataGridAttach.AutoGeneratedEditingTextStyle="{StaticResource TextColumnEditingElement}"
                                              DataGridAttach.IsShowRowNumber="True"
                                              ItemsSource="{Binding UserInfos}"
                                              SelectorAttach.SelectedItems="{Binding UserInfoSelectedItems}"
                                              SelectorAttach.SelectedItemsAttach="True" />
                                    <Button Grid.Row="1" Command="{Binding StartCommand}">显示选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_6">禁用/启用</Button>
                                </Grid>

                            </LayoutDocument>
                            <LayoutDocument Title="GroupBox">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <GroupBox Margin="10"
                                              Background="Orange"
                                              BorderBrush="Blue"
                                              DropShadowAttach.ShadowColor="Orange"
                                              Header="GroupBox">
                                        <TextBox>GroupBox</TextBox>
                                    </GroupBox>
                                    <DropShadowControl Grid.Row="1"
                                                       Margin="10"
                                                       Background="OrangeRed"
                                                       BlurRadius="40"
                                                       BorderBrush="Gray"
                                                       BorderThickness="2"
                                                       CornerRadius="10"
                                                       ShadowColor="IndianRed"
                                                       ShadowDepth="0">
                                        <TextBox Margin="10">DropShadowControl</TextBox>
                                    </DropShadowControl>
                                    <Border Grid.Row="2"
                                            Margin="10"
                                            Background="Green">
                                        <TextBox Margin="10">Border</TextBox>
                                    </Border>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="CheckBox">
                                <WrapPanel VerticalAlignment="Top" Orientation="Horizontal">
                                    <GroupBox Margin="10" Header="RadioButton">
                                        <WrapPanel Orientation="Horizontal">
                                            <RadioButton />
                                            <RadioButton>RadioButton</RadioButton>
                                            <RadioButton>123</RadioButton>
                                            <RadioButton>456</RadioButton>
                                            <RadioButton RadioButtonAttach.RadioButtonSize="30" />
                                            <RadioButton RadioButtonAttach.RadioButtonSize="40" />
                                            <RadioButton RadioButtonAttach.RadioButtonSize="50" />
                                        </WrapPanel>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="CheckBox">
                                        <WrapPanel Orientation="Horizontal">
                                            <CheckBox />
                                            <CheckBox Content="CheckBox" IsChecked="{x:Null}" />
                                            <CheckBox CheckBoxAttach.CheckBoxSize="30" IsChecked="{x:Null}" />
                                            <CheckBox CheckBoxAttach.CheckBoxSize="40" IsChecked="{x:Null}" />
                                            <CheckBox CheckBoxAttach.CheckBoxSize="50" IsChecked="{x:Null}" />
                                        </WrapPanel>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="ToggleButton">
                                        <WrapPanel Orientation="Horizontal">
                                            <ToggleButton>ToggleButton</ToggleButton>
                                            <ToggleButton Height="30">ToggleButton</ToggleButton>
                                            <ToggleButton Height="40">ToggleButton</ToggleButton>
                                            <ToggleButton Height="50">ToggleButton</ToggleButton>
                                        </WrapPanel>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="ToggleButtonSwitchStyle">
                                        <WrapPanel Orientation="Horizontal">
                                            <ToggleButton Style="{StaticResource ToggleButtonSwitch}" />
                                            <ToggleButton Height="30" Style="{StaticResource ToggleButtonSwitch}" />
                                            <ToggleButton Height="40" Style="{StaticResource ToggleButtonSwitch}" />
                                            <ToggleButton Height="50" Style="{StaticResource ToggleButtonSwitch}" />
                                        </WrapPanel>
                                    </GroupBox>
                                </WrapPanel>
                            </LayoutDocument>
                            <LayoutDocument Title="TextBlock">
                                <GroupBox Margin="10" Header="TextHighlight">
                                    <UniformGrid Columns="2">
                                        <UniformGrid.Resources>
                                            <DataTemplate x:Key="TextHighlight">
                                                <TextBlock Text="{Binding}" TextBlockAttach.HighlightText="{Binding ElementName=hightLight, Path=Text}" />
                                            </DataTemplate>
                                        </UniformGrid.Resources>
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding DengGao}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding JingYeSi}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding HuangHeLou}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding DengGuanQueLou}" />
                                        <TextBlock TextBlockAttach.HighlightText="{Binding ElementName=hightLight, Path=Text}" TextWrapping="Wrap">
                                            WrapPanel控件：该控件根据Orientation属性，在垂直叠放控件或者在行中放置控件方面，WrapPanel与StackPanel类似。除了叠放外，WrapPanel还未包含的控件提供了换行支持，因此，如果在WrapPanel
                                            中放入超过其容器宽度的内容时，这些控件被换行显示以形成换行效果。
                                        </TextBlock>
                                        <TextBox Name="hightLight" VerticalAlignment="Top">白</TextBox>
                                    </UniformGrid>
                                </GroupBox>
                            </LayoutDocument>
                            <LayoutDocument Title="Other"
                                            CanClose="False"
                                            Description="其他"
                                            IsSelected="True"
                                            ToolTip="Other">
                                <Grid>
                                    <!--<Grid>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="BasicBrush" StartPoint="0.499,1" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="#08000000" />
                                                    <GradientStop Offset="1.0" Color="#03000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="BasicBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="0.0,1"
                                                                            To="1,1"
                                                                            Duration="0:0:40" />
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="BasicBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="0.001,1"
                                                                            To="1,1"
                                                                            Duration="0:0:40" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="ThirdBrush" StartPoint="0.499,1" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="#08000000" />
                                                    <GradientStop Offset="1.0" Color="#03000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="0.0,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="0.001,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation BeginTime="0:0:15"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="0.0,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation BeginTime="0:0:15"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="0.001,1"
                                                                            Duration="0:0:15" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="SecondBrush" StartPoint="1,0.499" EndPoint="1,0.5">
                                                    <GradientStop Offset="0.0" Color="#02000000" />
                                                    <GradientStop Offset="1.0" Color="#07000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="SecondBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="1,0"
                                                                            Duration="0:0:20" />
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="SecondBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="1,0.001"
                                                                            Duration="0:0:20" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                    </Grid>-->

                                    <WrapPanel>
                                        <GroupBox Margin="10" Header="InputControl">
                                            <WrapPanel>
                                                <DateTimePicker VerticalAlignment="Top"
                                                                DateTimeFormat="yyyy-MM-dd"
                                                                DisplayDateEnd="2022-1-1 13:00:00"
                                                                DisplayDateStart="2020-1-1"
                                                                Foreground="Green"
                                                                IsDateOnly="True"
                                                                SelectedDateTime="{Binding CurrentDateTime}"
                                                                TextBoxAttach.PlaceHolder="请选择日期..."
                                                                TextBoxAttach.Title="DateTimePicker："
                                                                TextBoxAttach.TitlePlacement="Top" />
                                                <DateTimePicker VerticalAlignment="Top" />

                                                <SearchBar VerticalAlignment="Top"
                                                           Foreground="Violet"
                                                           TextBoxAttach.PlaceHolder="请输入搜索内容..."
                                                           TextBoxAttach.Title="SearchBar："
                                                           TextBoxAttach.TitlePlacement="Top" />
                                                <SearchBar VerticalAlignment="Top" />

                                                <TextBox VerticalAlignment="Top"
                                                         BorderThickness="0,0,0,2"
                                                         Text="{Binding CurrentDateTime}"
                                                         TextBoxAttach.PlaceHolder="请输入文本..."
                                                         TextBoxAttach.Title="TextBox："
                                                         TextBoxAttach.TitlePlacement="Top" />
                                                <TextBox VerticalAlignment="Top" Foreground="Blue" />

                                                <PasswordBox VerticalAlignment="Top"
                                                             Foreground="Purple"
                                                             TextBoxAttach.PlaceHolder="请输入密码..."
                                                             TextBoxAttach.Title="PasswordBox："
                                                             TextBoxAttach.TitlePlacement="Top" />
                                                <PasswordBox VerticalAlignment="Top" PasswordChar="#" />

                                                <PasswordTextBox VerticalAlignment="Top"
                                                                 CanShowPassword="False"
                                                                 Foreground="Indigo"
                                                                 PasswordChar="$"
                                                                 TextBoxAttach.PlaceHolder="请输入密码..."
                                                                 TextBoxAttach.Title="PasswordTextBox："
                                                                 TextBoxAttach.TitlePlacement="Top" />
                                                <PasswordTextBox VerticalAlignment="Top" />

                                                <ComboBox VerticalAlignment="Top"
                                                          DisplayMemberPath="Name"
                                                          Foreground="Red"
                                                          ItemsSource="{Binding ProNodes}"
                                                          TextBoxAttach.PlaceHolder="IsEditable=False"
                                                          TextBoxAttach.Title="ComboBox："
                                                          TextBoxAttach.TitlePlacement="Top" />
                                                <ComboBox VerticalAlignment="Top"
                                                          DisplayMemberPath="Value"
                                                          IsEditable="True"
                                                          ItemsSource="{Binding ProNodes}"
                                                          TextBoxAttach.PlaceHolder="IsEditable=True" />

                                                <CheckComboBox VerticalAlignment="Top"
                                                               DisplayMemberPath="Name"
                                                               Foreground="Orange"
                                                               ItemsSource="{Binding ProNodes}"
                                                               TextBoxAttach.Title="CheckComboBox："
                                                               TextBoxAttach.TitlePlacement="Top" />
                                                <CheckComboBox VerticalAlignment="Top"
                                                               DisplayMemberPath="Description"
                                                               ItemsSource="{Binding ProNodes}" />
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="InputControlWithButtonTitle">
                                            <WrapPanel>
                                                <DateTimePicker Name="dateTimePicker"
                                                                Width="300"
                                                                Height="50"
                                                                HorizontalContentAlignment="Right"
                                                                VerticalContentAlignment="Bottom"
                                                                TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>DateTimePicker：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入日期...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </DateTimePicker>
                                                <SearchBar Width="300"
                                                           Height="50"
                                                           HorizontalContentAlignment="Right"
                                                           VerticalContentAlignment="Bottom"
                                                           TextBoxAttach.PlaceHolderOpacity="1"
                                                           TextBoxAttach.TitleIsHitTestVisible="True"
                                                           TextWrapping="Wrap">
                                                    <TextBoxAttach.Title>
                                                        <Button>SearchBar：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入搜索内容...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </SearchBar>
                                                <TextBox Width="300"
                                                         Height="50"
                                                         HorizontalContentAlignment="Right"
                                                         VerticalContentAlignment="Bottom"
                                                         TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <UniformGrid Columns="1">
                                                            <Button>TextBox1：</Button>
                                                            <Button>TextBox2：</Button>
                                                        </UniformGrid>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入文本...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </TextBox>
                                                <PasswordBox Width="300"
                                                             Height="50"
                                                             HorizontalContentAlignment="Right"
                                                             VerticalContentAlignment="Bottom"
                                                             PasswordChar="$"
                                                             TextBoxAttach.PlaceHolderOpacity="1"
                                                             TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>PasswordBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入密码...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </PasswordBox>
                                                <PasswordTextBox Name="passwordTextBox"
                                                                 Width="300"
                                                                 Height="50"
                                                                 HorizontalContentAlignment="Right"
                                                                 VerticalContentAlignment="Bottom"
                                                                 PasswordChar="◉"
                                                                 TextBoxAttach.PlaceHolderIsHitTestVisible="False"
                                                                 TextBoxAttach.PlaceHolderOpacity="1"
                                                                 TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>PasswordTextBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入密码...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </PasswordTextBox>
                                                <ComboBox Width="300"
                                                          Height="50"
                                                          HorizontalContentAlignment="Right"
                                                          VerticalContentAlignment="Bottom"
                                                          DisplayMemberPath="Name"
                                                          IsEditable="True"
                                                          IsReadOnly="True"
                                                          ItemsSource="{Binding ProNodes}"
                                                          TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>ComboBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>IsReadOnly="True"</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </ComboBox>
                                                <CheckComboBox Name="checkComboBox"
                                                               Width="300"
                                                               Height="50"
                                                               HorizontalContentAlignment="Right"
                                                               VerticalContentAlignment="Bottom"
                                                               DisplayMemberPath="Description"
                                                               ItemsSource="{Binding ProNodes}"
                                                               SelectedItems="{Binding SelectedItemsFileNodes}"
                                                               Separator=";"
                                                               StringFormat="分组{0}"
                                                               TextBoxAttach.TitleIsHitTestVisible="True"
                                                               TextWrapping="Wrap"
                                                               VirtualizingPanel.ScrollUnit="Pixel">
                                                    <TextBoxAttach.Title>
                                                        <Button>CheckComboBox：</Button>
                                                    </TextBoxAttach.Title>
                                                </CheckComboBox>
                                            </WrapPanel>
                                        </GroupBox>
                                    </WrapPanel>
                                </Grid>
                            </LayoutDocument>
                        </LayoutDocumentPane>
                    </LayoutDocumentPaneGroup>
                    <LayoutAnchorablePaneGroup DockWidth="400">
                        <LayoutAnchorablePane>
                            <LayoutAnchorable Title="ListView" ToolTip="This a ListView">
                                <ListView ItemsSource="{Binding Result}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Width="50"
                                                            DisplayMemberBinding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Converter={StaticResource ListViewIndexConverter}}"
                                                            Header="序号" />
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V0}" Header="V0" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V1}" Header="V1" />
                                            <GridViewColumn DisplayMemberBinding="{Binding RX}" Header="RX" />
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="ListBox" ToolTip="This a ListView">
                                <ListBox BorderBrush="Transparent"
                                         BorderThickness="0"
                                         SelectionMode="Multiple">
                                    <ListBoxItem>123123123</ListBoxItem>
                                    <ListBoxItem>456456456</ListBoxItem>
                                    <ListBoxItem>789789789</ListBoxItem>
                                    <ListBoxItem>123123123</ListBoxItem>
                                    <ListBoxItem>456456456</ListBoxItem>
                                    <ListBoxItem>789789789</ListBoxItem>
                                    <ListBoxItem>123123123</ListBoxItem>
                                    <ListBoxItem>456456456</ListBoxItem>
                                    <ListBoxItem>789789789</ListBoxItem>
                                </ListBox>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="TreeView" ToolTip="This a TreeView">
                                <TreeView ItemsSource="{Binding TreeViewModels}"
                                          TreeViewAttach.IsSelectWithMouseRightDown="True"
                                          TreeViewAttach.SelectedItem="{Binding TreeViewSelectedItem}"
                                          TreeViewAttach.SelectedItemAttach="True">
                                    <TreeView.ItemContainerStyle>
                                        <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="TreeViewItem">
                                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                            <Setter Property="ContextMenu">
                                                <Setter.Value>
                                                    <ContextMenu>
                                                        <MenuItem Command="{Binding StartRenameCommand}" Header="重命名" />
                                                        <MenuItem Command="{Binding ShowPropertiesCommand}" Header="属性" />
                                                    </ContextMenu>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TreeView.ItemContainerStyle>
                                    <TreeView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Click="MenuItem_Click_2" Header="导入文件夹" />
                                            <!--<MenuItem Click="MenuItem_Click_3" Header="展开全部文件" />
                                            <MenuItem Click="MenuItem_Click_4" Header="收起全部文件" />-->
                                        </ContextMenu>
                                    </TreeView.ContextMenu>
                                    <TreeView.ItemTemplate>
                                        <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                            <DockPanel MouseDownAttach.Command="{Binding DoubleClickCommand}"
                                                       MouseDownAttach.IgnoreElement="TextBoxView"
                                                       MouseDownAttach.MouseClickCount="2"
                                                       MouseDownAttach.MouseClickMode="Left"
                                                       ToolTip="{Binding FullName}">
                                                <Image Height="{Binding ElementName=Header, Path=ActualHeight}"
                                                       Margin="2,0,4,0"
                                                       Source="{Binding IconImageSource}" />
                                                <TextBlock Name="Header"
                                                           HorizontalAlignment="Left"
                                                           Text="{Binding Header}"
                                                           Visibility="{Binding IsEditing, Converter={StaticResource BoolToNotVisibilityConverter}}" />
                                                <TextBox Padding="0"
                                                         HorizontalAlignment="Left"
                                                         BorderThickness="0"
                                                         Text="{Binding Header}"
                                                         Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                                                    <i:Interaction.Triggers>
                                                        <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=IsKeyboardFocusWithin}" Value="false">
                                                            <i:InvokeCommandAction Command="{Binding EndRenameCommand}" />
                                                        </i:DataTrigger>
                                                        <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=IsVisible}" Value="true">
                                                            <i:InvokeCommandAction Command="{Binding RenameVisibleCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}" />
                                                        </i:DataTrigger>
                                                    </i:Interaction.Triggers>
                                                </TextBox>
                                            </DockPanel>
                                        </HierarchicalDataTemplate>
                                    </TreeView.ItemTemplate>
                                </TreeView>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="PropertyGrid" ToolTip="This a PropertyGrid">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <PropertyGrid SelectedObject="{Binding SelectedObject}" />
                                    <Button Grid.Row="1" Click="Button_Click_3">显示InstrumentType选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_7">SelectedObject=MainWindow</Button>
                                </Grid>
                            </LayoutAnchorable>
                        </LayoutAnchorablePane>
                    </LayoutAnchorablePaneGroup>
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>
        <StatusBar Grid.Row="1" Padding="4">
            <StatusBar.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                </Style>
            </StatusBar.Resources>

            <Button Width="Auto" Click="Button_Click_4">切换状态</Button>
            <StatusBarItem Margin="4,0" Content="{Binding StatusBarContent}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ZoomInCommand}" Content="-" />
                    <Button Margin="4,0"
                            Command="{Binding ZoomOutCommand}"
                            Content="+" />
                    <TextBlock Text="{Binding WindowScale, StringFormat={}{0:P1}}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</ChromeWindow>