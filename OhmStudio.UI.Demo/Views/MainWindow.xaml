<ChromeWindow x:Class="OhmStudio.UI.Demo.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:demo="clr-namespace:OhmStudio.UI.Demo"
              xmlns:hc="https://handyorg.github.io/handycontrol"
              xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
              xmlns:local="clr-namespace:OhmStudio.UI.Demo.Views"
              xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveChartsExt.Wpf"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:model="clr-namespace:OhmStudio.UI.Demo.Models"
              xmlns:omhui="http://ohmstudio.ui.com"
              xmlns:oxy="http://oxyplot.org/wpf"
              xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
              xmlns:viewmodels="clr-namespace:OhmStudio.UI.Demo.ViewModels"
              DataContext="{Binding Source={StaticResource Locator}, Path=MainViewModel}"
              Title="{x:Static demo:App.Name}"
              Width="1280"
              Height="720"
              BorderAttach.CornerRadius="{Binding CornerRadius}"
              Icon="/icon.ico"
              ResizeMode="CanResizeWithGrip"
              ShowIcon="False"
              ShowTitle="False"
              SnapsToDevicePixels="{Binding IsAntiAliasing}"
              Topmost="{Binding IsTopmost}"
              UseLayoutRounding="{Binding IsAntiAliasing}"
              WindowStartupLocation="CenterScreen"
              mc:Ignorable="d">

    <Window.LayoutTransform>
        <ScaleTransform ScaleX="{Binding WindowScale}" ScaleY="{Binding WindowScale}" />
    </Window.LayoutTransform>

    <Window.Resources>

        <GroupIndexConverter x:Key="GroupIndexConverter" />
        <ListViewIndexConverter x:Key="ListViewIndexConverter" />
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <BoolToCollapsedConverter x:Key="BoolToCollapsedConverter" />

    </Window.Resources>

    <ChromeWindow.LeftWindowCommands>
        <StackPanel Margin="6,6,0,6">
            <StackPanel Orientation="Horizontal">
                <Image Height="20" Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}" />
                <Menu VerticalAlignment="Center">
                    <MenuItem Header="文件(F)">
                        <MenuItem Header="新建" />
                        <MenuItem Header="打开" />
                        <MenuItem Header="关闭" InputGestureText="Alt+F4" />
                    </MenuItem>
                    <MenuItem Header="编辑(E)">
                        <MenuItem Header="复制" InputGestureText="Ctrl+C" />
                        <MenuItem Header="粘贴" InputGestureText="Ctrl+V" />
                        <MenuItem Header="删除" InputGestureText="Delete" />
                    </MenuItem>
                    <MenuItem Header="视图(V)">
                        <MenuItem Header="代码" />
                        <MenuItem Header="设计器" />
                        <MenuItem Header="在Blend中设计" />
                    </MenuItem>
                    <MenuItem Header="Git(G)">
                        <MenuItem Header="提取" />
                        <MenuItem Header="拉取" />
                        <MenuItem Header="推送" />
                        <MenuItem Header="同步(拉取然后推送)" />
                    </MenuItem>
                </Menu>
                <Separator Style="{StaticResource VerticalSeparator}" />
                <SearchBar Margin="10,0"
                           VerticalAlignment="Center"
                           Command="{Binding SearchCommand}"
                           TextBoxAttach.PlaceHolder="请输入搜索内容..." />
                <!--<CheckComboBox />-->
                <TextBox VerticalAlignment="Center"
                         Text="{Binding GlobalCornerRadius}"
                         TextBoxAttach.Title="全局圆角：" />
                <Border Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        IsHitTestVisible="False">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <TextBlock Margin="4"
                               HorizontalAlignment="Center"
                               FontWeight="Bold"
                               Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
            </StackPanel>
            <StackPanel Margin="0,6,0,0">
                <ToolBarTray VerticalAlignment="Top">
                    <ToolBar>
                        <Button Content="{PackIcon Kind=FileAdd}" ToolTip="新建项目" />
                        <Button Margin="4,0"
                                Content="{PackIcon Kind=FileOutline}"
                                ToolTip="打开文件" />
                        <Button Content="{PackIcon Kind=Save}" ToolTip="保存当前文件" />

                        <Button Margin="4,0,0,0"
                                Content="{PackIcon Kind=SaveAll}"
                                ToolTip="保存全部文件&amp;设置" />
                        <CheckBox IsChecked="{Binding IsTopmost}">窗口置顶</CheckBox>
                        <CheckBox IsChecked="{Binding IsAntiAliasing}">抗锯齿</CheckBox>
                    </ToolBar>
                    <ToolBar BandIndex="1">
                        <ToolBar.Resources>
                            <Style BasedOn="{StaticResource {x:Type PackIcon}}" TargetType="PackIcon">
                                <Setter Property="Padding" Value="2" />
                            </Style>
                        </ToolBar.Resources>
                        <ComboBox>
                            <ComboBoxItem IsSelected="True">Debug</ComboBoxItem>
                            <ComboBoxItem>Release</ComboBoxItem>
                            <ComboBoxItem>配置管理器...</ComboBoxItem>
                        </ComboBox>
                        <ComboBox MinWidth="100" Margin="4,0">
                            <ComboBoxItem IsSelected="True">Any CPU</ComboBoxItem>
                            <ComboBoxItem>x64</ComboBoxItem>
                            <ComboBoxItem>x86</ComboBoxItem>
                        </ComboBox>
                        <ComboBox>
                            <ComboBoxItem IsSelected="True">
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <PackIcon Kind="PlayiOS" />
                                    <TextBlock Margin="6,0,0,0" Text="{x:Static demo:App.Name}" />
                                </StackPanel>
                            </ComboBoxItem>
                            <Separator />
                            <ComboBoxItem>
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <PackIcon Kind="SolidWrench" />
                                    <TextBlock Margin="6,0,0,0" Text="{x:Static demo:App.Name}" />
                                    <TextBlock Text=" 调试属性" />
                                </StackPanel>
                            </ComboBoxItem>
                            <ComboBoxItem>
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <PackIcon Kind="CogOutline" />
                                    <TextBlock Margin="6,0,0,0">配置启动项目...</TextBlock>
                                </StackPanel>
                            </ComboBoxItem>
                        </ComboBox>
                        <Button Margin="4,0" Content="{PackIcon Kind=PlayiOS}" />
                        <Button Content="{PackIcon Kind=Fire}" />
                        <Button Margin="4,0" Content="{PackIcon Kind=PauseiOS}" />
                        <Button Content="{PackIcon Kind=SquareiOS}" />
                        <Button Margin="4,0" Content="{PackIcon Kind=Refresh}" />
                    </ToolBar>
                </ToolBarTray>
            </StackPanel>
        </StackPanel>
    </ChromeWindow.LeftWindowCommands>

    <ChromeWindow.RightWindowCommands>
        <StackPanel Orientation="Horizontal">
            <StackPanel Margin="0,6,0,0"
                        VerticalAlignment="Top"
                        Orientation="Horizontal">
                <ComboBox ItemsSource="{Binding FontFamilyList}"
                          SelectedItem="{Binding CurrentFontFamily}"
                          TextBoxAttach.Title="全局字体：">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <NumericUpDown Margin="6,0"
                               Maximum="20"
                               Minimum="10"
                               TextBoxAttach.Title="字体大小："
                               Value="{Binding CurrentFontSize}" />
                <ComboBox ItemsSource="{Binding Source={EnumBindingSource ThemeType}}"
                          SelectedItem="{Binding CurrentTheme}"
                          TextBoxAttach.Title="主题：" />
                <Border Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                        Margin="6,0"
                        Background="Purple"
                        CornerRadiusAttach.IsCircular="True"
                        ToolTip="admin">
                    <TextBlock HorizontalAlignment="Center" Foreground="White">ad</TextBlock>
                </Border>
                <Button Click="Button_Click_5"
                        Focusable="False"
                        Style="{StaticResource ToolBarButtonBaseStyle}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="txtLogin"
                                   Margin="0,0,4,0"
                                   Text="登录" />
                        <PackIcon Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Kind="SolidUserPlus" />
                        <!--<LoadingCircle IsRunning="False">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding ElementName=txtLogin, Path=Text}" Value="登录">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                    <i:ChangePropertyAction PropertyName="IsRunning" Value="false" />
                                </i:DataTrigger>
                                <i:DataTrigger Binding="{Binding ElementName=txtLogin, Path=Text}" Value="登录中...">
                                    <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                    <i:ChangePropertyAction PropertyName="IsRunning" Value="true" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </LoadingCircle>-->
                    </StackPanel>
                </Button>
            </StackPanel>

            <WindowSystemButton ToolTip="更多">
                <StackPanel MinWidth="200">
                    <Button>设置</Button>
                    <Button>更新</Button>
                    <Button>反馈</Button>
                    <Button>关于</Button>
                    <TextBlock>TextBlock</TextBlock>
                </StackPanel>
            </WindowSystemButton>
        </StackPanel>
    </ChromeWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockingManager x:Name="dockingManager"
                        AutoHideDelay="0"
                        DocumentWrapPanel.IsWrap="True"
                        DocumentWrapPanel.UseMouseWheelWrap="True"
                        ShowSystemMenu="False">
            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal">
                    <LayoutDocumentPaneGroup>
                        <LayoutDocumentPane>
                            <LayoutDocument Title="ButtonBase">
                                <TabControl>
                                    <TabItem Header="Button">
                                        <Grid GridAttach.RowDefinitions="Auto,Auto,Auto,*">
                                            <StackPanel Margin="0,10" Orientation="Horizontal">
                                                <Button Margin="10,0" Click="Button_Click">Show MessageBoxResult</Button>
                                                <Button Margin="10,0" Click="Button_Click_1">AlertDialog.Show</Button>
                                                <Button Margin="10,0" Click="Button_Click_2">GC</Button>
                                            </StackPanel>
                                            <StackPanel Grid.Row="1"
                                                        Margin="0,10"
                                                        Orientation="Horizontal">
                                                <Button Margin="10,0" Click="Button_Click_9">UIMessageTip.Show</Button>
                                                <Button Margin="10,0" Click="Button_Click_10">UIMessageTip.ShowOk</Button>
                                                <Button Margin="10,0" Click="Button_Click_11">UIMessageTip.ShowWarning</Button>
                                                <Button Margin="10,0" Click="Button_Click_12">UIMessageTip.ShowError</Button>
                                                <Button Margin="10,0" Click="Button_Click_13">UIMessageTip.ShowErrorMultiLine</Button>
                                            </StackPanel>
                                            <StackPanel Grid.Row="2"
                                                        Margin="0,10"
                                                        Orientation="Horizontal">
                                                <Button Margin="10,0" Style="{StaticResource Win10Button}">
                                                    Win10Button
                                                </Button>
                                                <Button Margin="10,0"
                                                        Click="Button_Click_14"
                                                        Style="{StaticResource ClassicButton}">
                                                    ClassicButton
                                                </Button>
                                                <Button Margin="10,0" Style="{StaticResource ClassicButtonBlue}">
                                                    ClassicButtonBlue
                                                </Button>
                                                <Button Margin="10,0"
                                                        ButtonAttach.PressedBackground="IndianRed"
                                                        ButtonAttach.PressedBorderBrush="IndianRed"
                                                        Style="{StaticResource ClassicButtonGreen}">
                                                    ClassicButtonGreen
                                                </Button>
                                                <Button Margin="10,0" Style="{StaticResource ClassicButtonRed}">
                                                    ClassicButtonRed
                                                </Button>
                                            </StackPanel>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="ToggleButton">
                                        <WrapPanel VerticalAlignment="Top" Orientation="Horizontal">
                                            <GroupBox Margin="10" Header="RadioButton">
                                                <WrapPanel Orientation="Horizontal">
                                                    <RadioButton />
                                                    <RadioButton>RadioButton</RadioButton>
                                                    <RadioButton>123</RadioButton>
                                                    <RadioButton>456</RadioButton>
                                                    <RadioButton RadioButtonAttach.RadioButtonSize="20" />
                                                    <RadioButton RadioButtonAttach.RadioButtonSize="30" />
                                                    <RadioButton RadioButtonAttach.RadioButtonSize="40" />
                                                    <RadioButton RadioButtonAttach.RadioButtonSize="50" />
                                                </WrapPanel>
                                            </GroupBox>
                                            <GroupBox Margin="10" Header="CheckBox">
                                                <WrapPanel Orientation="Horizontal">
                                                    <CheckBox />
                                                    <CheckBox Content="CheckBox" IsChecked="{x:Null}" />
                                                    <CheckBox CheckBoxAttach.CheckBoxSize="20" IsChecked="{x:Null}" />
                                                    <CheckBox CheckBoxAttach.CheckBoxSize="30" IsChecked="{x:Null}" />
                                                    <CheckBox CheckBoxAttach.CheckBoxSize="40" IsChecked="{x:Null}" />
                                                    <CheckBox CheckBoxAttach.CheckBoxSize="50" IsChecked="{x:Null}" />
                                                </WrapPanel>
                                            </GroupBox>
                                            <GroupBox Margin="10" Header="ToggleButton">
                                                <WrapPanel Orientation="Horizontal">
                                                    <ToggleButton>ToggleButton</ToggleButton>
                                                    <ToggleButton Height="30">ToggleButton</ToggleButton>
                                                    <ToggleButton Height="40">ToggleButton</ToggleButton>
                                                    <ToggleButton Height="50">ToggleButton</ToggleButton>
                                                </WrapPanel>
                                            </GroupBox>
                                            <GroupBox Margin="10" Header="ToggleButtonSwitchStyle">
                                                <WrapPanel Orientation="Horizontal">
                                                    <ToggleButton Style="{StaticResource ToggleButtonSwitch}" />
                                                    <ToggleButton Height="30" Style="{StaticResource ToggleButtonSwitch}" />
                                                    <ToggleButton Height="40" Style="{StaticResource ToggleButtonSwitch}" />
                                                    <ToggleButton Height="50" Style="{StaticResource ToggleButtonSwitch}" />
                                                </WrapPanel>
                                            </GroupBox>
                                        </WrapPanel>
                                    </TabItem>
                                </TabControl>
                            </LayoutDocument>
                            <LayoutDocument Title="GridSplitter">
                                <Grid GridAttach.ColumnDefinitions="*,Auto,200">
                                    <Grid GridAttach.RowDefinitions="*,Auto,*">
                                        <GridSplitter Grid.Row="1"
                                                      Height="6"
                                                      HorizontalAlignment="Stretch"
                                                      ShowsPreview="True" />
                                    </Grid>
                                    <GridSplitter Grid.Column="1"
                                                  Width="6"
                                                  HorizontalAlignment="Stretch"
                                                  ShowsPreview="True" />
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="DataGrid">
                                <UniformGrid Rows="3">
                                    <UniformGrid.Resources>
                                        <CollectionViewSource x:Key="ItemCollectionViewSource"
                                                              IsLiveGroupingRequested="True"
                                                              IsLiveSortingRequested="True"
                                                              Source="{Binding Employees}">
                                            <CollectionViewSource.GroupDescriptions>
                                                <PropertyGroupDescription PropertyName="Name" />

                                            </CollectionViewSource.GroupDescriptions>
                                            <CollectionViewSource.SortDescriptions>
                                                <!--  Requires 'xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"' declaration.  -->
                                                <scm:SortDescription PropertyName="Name" />
                                                <scm:SortDescription PropertyName="Value" />
                                                <scm:SortDescription PropertyName="Description" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>
                                    </UniformGrid.Resources>
                                    <GroupBox Margin="10" Header="DataGridWithGroup">
                                        <DataGrid AutoGenerateColumns="False"
                                                  CanUserAddRows="False"
                                                  DataGridAttach.SelectionChangedUpdateRowNumber="True"
                                                  DataGridAttach.ShowRowNumber="True"
                                                  ItemsSource="{Binding Source={StaticResource ItemCollectionViewSource}}"
                                                  VirtualizingPanel.IsVirtualizing="True"
                                                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                  VirtualizingPanel.VirtualizationMode="Recycling">
                                            <!--  定义需要显示的列  -->
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                                <DataGridTextColumn Binding="{Binding Value}" Header="Value" />
                                                <DataGridTextColumn Binding="{Binding Password}"
                                                                    DataGridColumnAttach.IsIgnoreElementStyle="True"
                                                                    ElementStyle="{StaticResource TextBlockPassword}"
                                                                    Header="密码" />
                                                <DataGridTemplateColumn Header="密码">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <PasswordTextBox BorderThickness="0" Password="{Binding Password}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="时间">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <DateTimePicker BorderThickness="0" Foreground="IndianRed" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.GroupStyle>
                                                <GroupStyle>
                                                    <GroupStyle.ContainerStyle>
                                                        <Style TargetType="GroupItem">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="GroupItem">
                                                                        <Expander Background="{DynamicResource DataGridGroupItemHeaderBackground}" IsExpanded="{Binding Path=Items[0].IsExpanded, FallbackValue=True, TargetNullValue=True}">
                                                                            <Expander.Header>
                                                                                <StackPanel Orientation="Horizontal">
                                                                                    <TextBlock>
                                                                                        <TextBlock.Text>
                                                                                            <MultiBinding Converter="{StaticResource GroupIndexConverter}">
                                                                                                <Binding Path="ItemsSource.Groups" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" />
                                                                                            </MultiBinding>
                                                                                        </TextBlock.Text>
                                                                                    </TextBlock>
                                                                                    <TextBlock Margin="20,0" Text="{Binding Path=Name, StringFormat=分组：{0}}" />
                                                                                    <TextBlock Text="{Binding Path=ItemCount, StringFormat=数量：{0}}" />
                                                                                </StackPanel>
                                                                            </Expander.Header>
                                                                            <ItemsPresenter />
                                                                        </Expander>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </GroupStyle.ContainerStyle>
                                                </GroupStyle>
                                            </DataGrid.GroupStyle>
                                            <DataGrid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Click="MenuItem_Click" Header="全部展开" />
                                                    <MenuItem Click="MenuItem_Click_1" Header="全部折叠" />
                                                </ContextMenu>
                                            </DataGrid.ContextMenu>
                                        </DataGrid>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="DataGridWithAutoGenerateColumns">
                                        <DataGrid CellEditEnding="DataGrid_CellEditEnding"
                                                  DataGridAttach.IsEnableEditBoxAssist="True"
                                                  DataGridAttach.ShowRowNumber="True"
                                                  ItemsSource="{Binding Employees}"
                                                  RowDetailsVisibilityMode="VisibleWhenSelected"
                                                  ScrollViewerAttach.Orientation="Horizontal">
                                            <DataGrid.RowDetailsTemplate>
                                                <DataTemplate>
                                                    <DropShadowControl Margin="4"
                                                                       Background="Orange"
                                                                       ShadowBrush="Orange">
                                                        <TextBlock Text="{Binding InstrumentType}" />
                                                    </DropShadowControl>
                                                </DataTemplate>
                                            </DataGrid.RowDetailsTemplate>
                                        </DataGrid>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="DataGridWithManualGenerateColumns">
                                        <DataGrid AutoGenerateColumns="False"
                                                  CanUserAddRows="False"
                                                  DataGridAttach.ShowRowNumber="True"
                                                  ItemsSource="{Binding Employees}"
                                                  SelectionUnit="CellOrRowHeader">
                                            <DataGrid.Columns>
                                                <!--<DataGridHyperlinkColumn Header="Header" Binding="{Binding Name}"></DataGridHyperlinkColumn>-->
                                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                                <DataGridCheckBoxColumn Binding="{Binding IsExpanded}" Header="IsExpanded" />
                                                <DataGridComboBoxColumn Header="Name1" ItemsSource="{EnumBindingSource viewmodels:InstrumentType}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </GroupBox>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="RollBox">
                                <Grid GridAttach.RowDefinitions="*,Auto,Auto">
                                    <RollBox x:Name="rollBox" Interval="0:0:3">

                                        <!--<Image Source="https://pic4.zhimg.com/v2-177d137cb3266e217cc0bb45c2e5b1ef_r.jpg" />
                                        <Image Source="https://pic3.zhimg.com/v2-1260ce85d93a13a45a3bd7b224634222_r.jpg" />-->

                                        <Image Source="/Assets/Images/1.jpg" />
                                        <Image Source="https://pica.zhimg.com/v2-a23f3078d20eba31f367a605cdb94c14_r.jpg?source=1940ef5c" />
                                        <Image Source="/Assets/Images/1a.jpg" />
                                        <Image Source="/Assets/Images/1b.jpg" />
                                        <Image Source="/Assets/Images/2.jpg" />
                                        <Image Source="/Assets/Images/2a.jpg" />
                                        <Image Source="/Assets/Images/3.jpg" />
                                        <Image Source="/Assets/Images/3a.jpg" />
                                        <Button>Button</Button>
                                        <UniformGrid Columns="1" Rows="2">
                                            <Button>Button1</Button>
                                            <Button>Button2</Button>
                                        </UniformGrid>

                                    </RollBox>
                                    <UniformGrid Grid.Row="1" Rows="1">
                                        <Button Click="Button_Click_15">
                                            切换ItemsSource
                                        </Button>
                                        <Button Click="Button_Click_16">
                                            重置
                                        </Button>
                                    </UniformGrid>
                                    <Grid Grid.Row="2">
                                        <TextBlock Text="{Binding ElementName=rollBox, Path=Interval, StringFormat=当前滚动间隔：{0}}" />
                                        <TextBlock HorizontalAlignment="Right" Text="{Binding ElementName=rollBox, Path=ItemsSource.Count, StringFormat=ItemsSource.Count:{0}}" />
                                    </Grid>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="TextEditor">
                                <TabControl>
                                    <TabItem Header="XML">
                                        <avalonEdit:TextEditor x:Name="textEditorxml"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="XML" />
                                    </TabItem>
                                    <TabItem Header="Json">
                                        <avalonEdit:TextEditor x:Name="textEditorxmljson"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="Json" />
                                    </TabItem>
                                    <TabItem Header="TSQL">
                                        <avalonEdit:TextEditor x:Name="textEditorxmltsql"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="TSQL" />
                                    </TabItem>
                                    <TabItem Header="C++">
                                        <avalonEdit:TextEditor x:Name="textEditorcpp"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C++" />
                                    </TabItem>
                                    <TabItem Header="C#">
                                        <avalonEdit:TextEditor x:Name="textEditorcs"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C#" />
                                    </TabItem>
                                    <TabItem Header="RichTextBox">
                                        <RichTextBox VerticalScrollBarVisibility="Auto" />
                                    </TabItem>
                                </TabControl>
                            </LayoutDocument>
                            <LayoutDocument Title="ProgressBar">
                                <StackPanel>
                                    <CheckBox Margin="10" IsChecked="{Binding IsIndeterminate}">IsIndeterminate</CheckBox>
                                    <UniformGrid Rows="2">
                                        <GroupBox Margin="10,0" Header="ProgressBar">
                                            <UniformGrid>
                                                <ProgressBar Height="40"
                                                             VerticalAlignment="Center"
                                                             IsIndeterminate="{Binding IsIndeterminate}"
                                                             Style="{x:Null}" />

                                                <ProgressBar Orientation="Vertical"
                                                             ProgressBarAttach.Text="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Value, StringFormat=当前总进度：{0}%}"
                                                             Value="{Binding ProgressBarValue}" />

                                                <ProgressBar Height="40"
                                                             VerticalAlignment="Center"
                                                             IsIndeterminate="{Binding IsIndeterminate}" />
                                                <ProgressBar VerticalAlignment="Center"
                                                             ProgressBarAttach.Text="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Value, StringFormat=当前总进度：{0}%}"
                                                             Value="{Binding ProgressBarValue}" />
                                            </UniformGrid>
                                        </GroupBox>

                                        <GroupBox Margin="10" Header="CircleProgressBar">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <Slider IsSnapToTickEnabled="True"
                                                        Maximum="100"
                                                        Minimum="0"
                                                        TickPlacement="Both"
                                                        Value="{Binding ProgressBarValue}" />
                                                <UniformGrid Grid.Row="1" Columns="4">
                                                    <CircleProgressBar BorderBrush="#FF06B025" Value="{Binding ProgressBarValue}" />
                                                    <CircleProgressBar HorizontalContentAlignment="Left"
                                                                       VerticalContentAlignment="Top"
                                                                       Value="{Binding ProgressBarValue}">
                                                        <StackPanel>
                                                            <TextBlock>进度</TextBlock>
                                                            <TextBlock Text="{Binding ProgressBarValue, StringFormat={}{0}%}" />
                                                        </StackPanel>
                                                    </CircleProgressBar>
                                                    <CircleProgressBar BorderBrush="{DynamicResource ProgressBarProgress}" Value="50" />
                                                    <CircleProgressBar Value="3.14159">
                                                        <TextBlock Text="{Binding ProgressBarValue, StringFormat={}{0}%}" />
                                                    </CircleProgressBar>
                                                    <LoadingLine IsRunning="{Binding IsIndeterminate}" />
                                                    <LoadingCircle IsRunning="{Binding IsIndeterminate}" />
                                                </UniformGrid>
                                            </Grid>
                                        </GroupBox>
                                    </UniformGrid>
                                </StackPanel>
                            </LayoutDocument>
                            <LayoutDocument Title="DocumentWrapPanel">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Button Click="Button_Click_8">换行/不换行</Button>
                                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                        <DocumentWrapPanel VerticalAlignment="Top" IsWrap="{Binding DocumentWrapPanelIsWrap}">
                                            <Panel.Resources>
                                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                                    <Setter Property="Height" Value="100" />
                                                    <Setter Property="Width" Value="100" />
                                                    <Setter Property="Margin" Value="10" />
                                                </Style>
                                            </Panel.Resources>
                                            <Button>1</Button>
                                            <Button>2</Button>
                                            <Button>3</Button>
                                            <Button>4</Button>
                                            <Button>5</Button>
                                            <Button>6</Button>
                                            <Button>7</Button>
                                            <Button>8</Button>
                                            <Button>9</Button>
                                            <Button>10</Button>
                                            <Button>11</Button>
                                            <Button>12</Button>
                                            <Button>13</Button>
                                            <Button>14</Button>
                                            <Button>15</Button>
                                            <Button>16</Button>
                                            <Button>17</Button>
                                            <Button>18</Button>
                                            <Button>19</Button>
                                            <Button>20</Button>
                                        </DocumentWrapPanel>
                                    </ScrollViewer>
                                    <TextBlock Grid.Row="2" Text="{Binding DocumentWrapPanelIsWrap, StringFormat=是否换行：{0}}" />
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="GifImage">
                                <UniformGrid Columns="2" Rows="2">
                                    <UniformGrid.Resources>
                                        <Style BasedOn="{StaticResource {x:Type GifImage}}" TargetType="GifImage">
                                            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                                            <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                        </Style>
                                    </UniformGrid.Resources>
                                    <GroupBox Margin="10" Header="本地资源">
                                        <GifImage BorderBrush="Green"
                                                  BorderThickness="2"
                                                  Source="/Assets/Images/car_chase.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络资源">
                                        <GifImage BorderBrush="Orange"
                                                  BorderThickness="10"
                                                  Source="https://img.lanrentuku.com/img/allimg/1206/5-120601152054-50.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络资源">
                                        <GifImage BorderBrush="YellowGreen"
                                                  BorderThickness="20"
                                                  Source="https://img.lanrentuku.com/img/allimg/1212/5-121204193Q8.gif" />
                                    </GroupBox>
                                    <!--<Image ImageBehavior.AnimatedSource="/Assets/Images/car_chase.gif"/>-->
                                    <!--<hc:GifImage Uri="/Assets/Images/car_chase.gif"  />-->
                                </UniformGrid>

                            </LayoutDocument>
                            <LayoutDocument Title="CanExecute">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <DataGrid DataGridAttach.ShowRowNumber="True"
                                              ItemsSource="{Binding UserInfos}"
                                              SelectorAttach.SelectedItems="{Binding UserInfoSelectedItems}"
                                              SelectorAttach.SelectedItemsAttach="True" />
                                    <Button Grid.Row="1" Command="{Binding StartCommand}">显示选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_6">禁用/启用</Button>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="GroupBox">
                                <UniformGrid Columns="1">
                                    <GroupBox Margin="10"
                                              Background="Orange"
                                              DropShadowControl.ShadowColor="Orange"
                                              Header="GroupBox">
                                        <GroupBox.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="Red" />
                                                <GradientStop Offset="0.5" Color="Green" />
                                                <GradientStop Offset="1" Color="Blue" />
                                            </LinearGradientBrush>
                                        </GroupBox.BorderBrush>
                                        <TextBox>GroupBox</TextBox>
                                    </GroupBox>
                                    <DropShadowControl Margin="10"
                                                       Background="OrangeRed"
                                                       BlurRadius="40"
                                                       BorderThickness="2"
                                                       CornerRadius="10"
                                                       ShadowColor="IndianRed"
                                                       ShadowDepth="0">
                                        <DropShadowControl.BorderBrush>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="Yellow" />
                                                <GradientStop Offset="0.5" Color="Orange" />
                                                <GradientStop Offset="1" Color="Red" />
                                            </LinearGradientBrush>
                                        </DropShadowControl.BorderBrush>
                                        <TextBox Margin="10">DropShadowControl</TextBox>
                                    </DropShadowControl>
                                    <Border Margin="10" Background="Green">
                                        <TextBox Margin="10">Border</TextBox>
                                    </Border>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="TextBlock">
                                <GroupBox Margin="10" Header="TextHighlight">
                                    <UniformGrid Columns="2">
                                        <UniformGrid.Resources>
                                            <DataTemplate x:Key="TextHighlight">
                                                <TextBlock Text="{Binding}" TextBlockAttach.HighlightText="{Binding ElementName=hightLight, Path=Text}" />
                                            </DataTemplate>
                                            <Style BasedOn="{StaticResource {x:Type ListBox}}" TargetType="ListBox">
                                                <Setter Property="SelectionMode" Value="Extended" />
                                                <Setter Property="DragDropAttach.IsDragSource" Value="True" />
                                                <Setter Property="DragDropAttach.IsDropTarget" Value="True" />
                                                <Setter Property="DragDropAttach.SelectDroppedItems" Value="True" />
                                                <Setter Property="DragDropAttach.UseDefaultDragAdorner" Value="True" />
                                                <Setter Property="DragDropAttach.UseDefaultEffectDataTemplate" Value="True" />
                                            </Style>
                                        </UniformGrid.Resources>
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding DengGao}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding JingYeSi}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding HuangHeLou}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding DengGuanQueLou}" />
                                        <TextBlock TextBlockAttach.HighlightText="{Binding ElementName=hightLight, Path=Text}" TextWrapping="Wrap">
                                            WrapPanel控件：该控件根据Orientation属性，在垂直叠放控件或者在行中放置控件方面，WrapPanel与StackPanel类似。除了叠放外，WrapPanel还未包含的控件提供了换行支持，因此，如果在WrapPanel
                                            中放入超过其容器宽度的内容时，这些控件被换行显示以形成换行效果。
                                        </TextBlock>
                                        <TextBox Name="hightLight"
                                                 VerticalAlignment="Center"
                                                 TextBoxAttach.Title="请输入搜索的关键字：">
                                            白
                                        </TextBox>
                                    </UniformGrid>
                                </GroupBox>
                            </LayoutDocument>
                            <LayoutDocument Title="WorkflowEditor">
                                <TabControl>
                                    <!--<TabItem Header="NoMvvmBinding">
                                        <WorkflowCanvas ItemsSource="{Binding WorkflowItems}" />
                                    </TabItem>-->
                                    <!--<TabItem Header="UseChildren" IsSelected="True">
                                        <WorkflowEditor>
                                            <WorkflowItem Content="开始" StepType="Begin" />
                                            <WorkflowItem Canvas.Left="80"
                                                          Canvas.Top="80"
                                                          Content="中间节点1" />
                                            <WorkflowItem Canvas.Left="160" Canvas.Top="160">
                                                <WorkflowItem.Content>
                                                    <TextBox>中间节点2</TextBox>
                                                </WorkflowItem.Content>
                                            </WorkflowItem>
                                            <WorkflowItem Canvas.Left="240" Canvas.Top="240">
                                                <ComboBox HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </WorkflowItem>
                                            <WorkflowItem Canvas.Left="320"
                                                          Canvas.Top="320"
                                                          Content="标记节点"
                                                          StepType="Reference" />
                                            <WorkflowItem Canvas.Left="400"
                                                          Canvas.Top="400"
                                                          Content="条件节点"
                                                          StepType="Condition" />
                                            <WorkflowItem Canvas.Left="480"
                                                          Canvas.Top="480"
                                                          Content="中间节点5" />
                                            <WorkflowItem Canvas.Left="560"
                                                          Canvas.Top="560"
                                                          Content="结束"
                                                          StepType="End" />
                                            <WorkflowItem Canvas.Left="640"
                                                          Canvas.Top="640"
                                                          Content="结束·不可拖拽"
                                                          IsDraggable="False"
                                                          StepType="End" />
                                        </WorkflowEditor>
                                    </TabItem>-->
                                    <TabItem Header="MvvmBinding">
                                        <Grid GridAttach.ColumnDefinitions="200,*" GridAttach.RowDefinitions="Auto,*,Auto">

                                            <ListBox Grid.Row="1"
                                                     ItemsSource="{EnumBindingSource EnumType=StepType}"
                                                     MouseLeftButtonDown="SourceListBox_MouseLeftButtonDown"
                                                     MouseMove="SourceListBox_MouseMove" />

                                            <UniformGrid Grid.ColumnSpan="2" Rows="1">
                                                <Button Click="Button_Click_19">BringIntoView</Button>
                                                <Button Command="{Binding WorkflowEditorTestCommand}">添加测试节点</Button>
                                                <Button Command="{Binding ElementName=workflowEditor, Path=SelectAllCommand}">选择全部</Button>
                                                <Button Command="{Binding ElementName=workflowEditor, Path=UnselectAllCommand}">取消全部</Button>
                                                <Button Command="{Binding ElementName=workflowEditor, Path=InvertSelectCommand}">反选</Button>
                                                <Button Command="{Binding DeleteWorkflowItemCommand}">删除选中流程</Button>
                                                <Button Command="{Binding SaveAsImageCommand}">保存为Png</Button>
                                            </UniformGrid>
                                            <WorkflowEditor x:Name="workflowEditor"
                                                            Grid.Row="1"
                                                            Grid.Column="1"
                                                            AllowDrop="True"
                                                            ItemsSource="{Binding WorkflowItemModels}"
                                                            SelectedItems="{Binding SelectedWorkflowItems}">

                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Drop">
                                                        <i:InvokeCommandAction Command="{Binding WorkflowEditorDropCommand}" PassEventArgsToCommand="True" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <WorkflowEditor.LineTemplate>
                                                    <DataTemplate>
                                                        <TextBox HorizontalAlignment="Center"
                                                                 VerticalAlignment="Center"
                                                                 Style="{StaticResource TransparentTextBox}"
                                                                 Text="{Binding LineContent}" />
                                                    </DataTemplate>
                                                </WorkflowEditor.LineTemplate>
                                                <WorkflowEditor.ItemContainerStyle>
                                                    <Style BasedOn="{StaticResource {x:Type WorkflowItem}}" TargetType="WorkflowItem">
                                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                        <Setter Property="IsDraggable" Value="{Binding IsLock, Mode=TwoWay, Converter={StaticResource InvertBoolConverter}}" />
                                                        <Setter Property="StepType" Value="{Binding StepType, Mode=TwoWay}" />
                                                        <Setter Property="Width" Value="{Binding Width, Mode=TwoWay}" />
                                                        <Setter Property="Height" Value="{Binding Height, Mode=TwoWay}" />
                                                        <Setter Property="Canvas.Left" Value="{Binding Left, Mode=TwoWay}" />
                                                        <Setter Property="Canvas.Top" Value="{Binding Top, Mode=TwoWay}" />
                                                        <Setter Property="PreviousStep" Value="{Binding PreviousStep, Mode=TwoWay}" />
                                                        <Setter Property="NextStep" Value="{Binding NextStep, Mode=TwoWay}" />
                                                        <Setter Property="FromStep" Value="{Binding FromStep, Mode=TwoWay}" />
                                                        <Setter Property="JumpToStep" Value="{Binding JumpToStep, Mode=TwoWay}" />
                                                        <Setter Property="BorderThickness" Value="2" />
                                                    </Style>
                                                </WorkflowEditor.ItemContainerStyle>
                                                <WorkflowEditor.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid GridAttach.RowDefinitions="Auto,*">
                                                            <Grid GridAttach.ColumnDefinitions="Auto,*,Auto">
                                                                <CheckBox Margin="10"
                                                                          VerticalAlignment="Center"
                                                                          IsChecked="{Binding IsLock}">
                                                                    锁定
                                                                </CheckBox>
                                                                <TextBox Grid.Column="1"
                                                                         Margin="0,10"
                                                                         Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                                                <Button Grid.Column="2"
                                                                        Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                                                                        Margin="10"
                                                                        Command="{Binding DeleteCommand}"
                                                                        ToolTip="移除此节点">
                                                                    <PackIcon Padding="2" Kind="CloseMD" />
                                                                </Button>
                                                            </Grid>
                                                            <Grid Grid.Row="1">
                                                                <TextBlock HorizontalAlignment="Center"
                                                                           VerticalAlignment="Top"
                                                                           Text="{Binding PreviousStep.Name, StringFormat=上一步：{0}}" />
                                                                <TextBlock HorizontalAlignment="Left"
                                                                           VerticalAlignment="Center"
                                                                           Text="{Binding FromStep.Name, StringFormat=跳转自：{0}}" />

                                                                <TextBlock HorizontalAlignment="Right"
                                                                           VerticalAlignment="Center"
                                                                           Text="{Binding JumpToStep.Name, StringFormat=跳转至：{0}}" />
                                                                <TextBlock HorizontalAlignment="Center"
                                                                           VerticalAlignment="Bottom"
                                                                           Text="{Binding NextStep.Name, StringFormat=下一步：{0}}" />
                                                                <!--<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                    <TextBlock Text="{Binding Top, StringFormat=Top:{0}}" />
                                                                    <TextBlock Text="{Binding Left, StringFormat=Left:{0}}" />
                                                                </StackPanel>-->
                                                            </Grid>

                                                        </Grid>
                                                    </DataTemplate>
                                                </WorkflowEditor.ItemTemplate>
                                            </WorkflowEditor>

                                            <Grid Grid.Row="2" Grid.ColumnSpan="2">
                                                <!--<TextBlock>
                                                    <Run Text="{Binding ElementName=workflowEditor, Path=MousePosition.X, StringFormat=X:{0}}" />
                                                    <Run Text="{Binding ElementName=workflowEditor, Path=MousePosition.Y, StringFormat=Y:{0}}" />
                                                </TextBlock>-->
                                                <TextBlock HorizontalAlignment="Left">
                                                    <Run Text="{Binding WorkflowItemModels.Count, StringFormat=WorkflowItems.Count:{0}, Mode=OneWay}" />
                                                    <Run Text="{Binding SelectedWorkflowItems.Count, StringFormat=SelectedWorkflowItems.Count:{0}, Mode=OneWay}" />
                                                </TextBlock>
                                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                    <TextBlock>
                                                        <Run Text="{Binding ElementName=workflowEditor, Path=IsKeyboardFocusWithin, StringFormat=IsKeyboardFocusWithin:{0}, Mode=OneWay}" />
                                                        <Run Text="{Binding ElementName=workflowEditor, Path=ViewportZoom, StringFormat=Zoom:{0}}" />
                                                    </TextBlock>
                                                </StackPanel>
                                            </Grid>
                                        </Grid>
                                    </TabItem>
                                </TabControl>
                            </LayoutDocument>
                            <LayoutDocument Title="PackIcons">
                                <DockPanel>
                                    <Grid DockPanel.Dock="Bottom">
                                        <TextBlock Text="{Binding ElementName=packIconsListBox, Path=SelectedItem, StringFormat=SelectedItem:{0}}" />
                                        <TextBlock HorizontalAlignment="Right" Text="{Binding PackIcons.Count, StringFormat=PackIcons.Count:{0}}" />
                                    </Grid>
                                    <ListBox x:Name="packIconsListBox"
                                             BorderThickness="0"
                                             DockPanel.Dock="Top"
                                             DragDropAttach.IsDragSource="True"
                                             DragDropAttach.IsDropTarget="True"
                                             DragDropAttach.SelectDroppedItems="True"
                                             DragDropAttach.UseDefaultDragAdorner="True"
                                             DragDropAttach.UseDefaultEffectDataTemplate="True"
                                             ItemsSource="{Binding PackIcons}"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel Width="64"
                                                           Height="64"
                                                           Margin="5"
                                                           ToolTip="{Binding}">
                                                    <TextBlock HorizontalAlignment="Center"
                                                               DockPanel.Dock="Bottom"
                                                               Text="{Binding}" />
                                                    <PackIcon Width="24"
                                                              Height="24"
                                                              DockPanel.Dock="Top"
                                                              Kind="{Binding}" />
                                                </DockPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ListBox>
                                </DockPanel>
                            </LayoutDocument>
                            <LayoutDocument Title="Expander">
                                <StackPanel>
                                    <Expander ExpandDirection="Left" Header="Left">
                                        <Button Width="100" HorizontalAlignment="Right">Button</Button>
                                    </Expander>
                                    <Expander ExpandDirection="Right" Header="Right">
                                        <Button Width="100" HorizontalAlignment="Left">Button</Button>
                                    </Expander>
                                    <Expander ExpandDirection="Up" Header="Up">
                                        <Button Height="100">Button</Button>
                                    </Expander>
                                    <Expander ExpandDirection="Down" Header="Down">
                                        <Button Height="100">Button</Button>
                                    </Expander>
                                </StackPanel>
                            </LayoutDocument>
                            <LayoutDocument Title="LiveCharts">
                                <Grid GridAttach.RowDefinitions="Auto,*">
                                    <CheckBox Margin="10" IsChecked="{Binding DisableAnimations}">禁用动画</CheckBox>
                                    <UniformGrid Grid.Row="1" Columns="2">
                                        <lvc:CartesianChart DisableAnimations="{Binding DisableAnimations}" LegendLocation="Bottom">
                                            <lvc:CartesianChart.AxisX>
                                                <lvc:Axis Title="X 轴" />
                                            </lvc:CartesianChart.AxisX>
                                            <lvc:CartesianChart.AxisY>
                                                <lvc:Axis Title="Y 轴" LabelFormatter="{Binding YAxisLabelFormatter}" />
                                            </lvc:CartesianChart.AxisY>
                                            <lvc:CartesianChart.Series>
                                                <lvc:LineSeries Title="正弦曲线" Values="{Binding SinValues}" />
                                                <lvc:LineSeries Title="余弦曲线" Values="{Binding CosValues}" />
                                            </lvc:CartesianChart.Series>
                                        </lvc:CartesianChart>
                                        <lvc:PieChart DisableAnimations="{Binding DisableAnimations}" LegendLocation="Bottom">
                                            <lvc:PieChart.Series>
                                                <lvc:PieSeries Title="Maria"
                                                               DataLabels="True"
                                                               Values="3" />
                                                <lvc:PieSeries Title="Charles"
                                                               DataLabels="True"
                                                               Values="4" />
                                                <lvc:PieSeries Title="Frida"
                                                               DataLabels="True"
                                                               Values="6" />
                                                <lvc:PieSeries Title="Frederic"
                                                               DataLabels="True"
                                                               Values="2" />
                                            </lvc:PieChart.Series>
                                        </lvc:PieChart>
                                    </UniformGrid>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="Other"
                                            CanClose="False"
                                            Description="其他"
                                            IsSelected="False"
                                            ToolTip="Other">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                    <!--<Grid>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="BasicBrush" StartPoint="0.499,1" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="#08000000" />
                                                    <GradientStop Offset="1.0" Color="#03000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="BasicBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="0.0,1"
                                                                            To="1,1"
                                                                            Duration="0:0:40" />
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="BasicBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="0.001,1"
                                                                            To="1,1"
                                                                            Duration="0:0:40" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="ThirdBrush" StartPoint="0.499,1" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="#08000000" />
                                                    <GradientStop Offset="1.0" Color="#03000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="0.0,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="0.001,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation BeginTime="0:0:15"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="0.0,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation BeginTime="0:0:15"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="0.001,1"
                                                                            Duration="0:0:15" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="SecondBrush" StartPoint="1,0.499" EndPoint="1,0.5">
                                                    <GradientStop Offset="0.0" Color="#02000000" />
                                                    <GradientStop Offset="1.0" Color="#07000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="SecondBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="1,0"
                                                                            Duration="0:0:20" />
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="SecondBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="1,0.001"
                                                                            Duration="0:0:20" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                    </Grid>-->

                                    <WrapPanel>
                                        <GroupBox Margin="10" Header="InputControl">
                                            <WrapPanel>
                                                <DateTimePicker VerticalAlignment="Top"
                                                                DisplayDateEnd="2022-1-1 13:00:00"
                                                                DisplayDateStart="2020-1-1"
                                                                Foreground="Green"
                                                                IsDateOnly="True"
                                                                SelectedDateTime="{Binding CurrentDateTime}"
                                                                SelectedDateTimeFormat="yyyy-MM-dd"
                                                                TextBoxAttach.PlaceHolder="请选择日期..."
                                                                TextBoxAttach.Title="DateTimePicker："
                                                                TextBoxAttach.TitlePlacement="Top" />
                                                <DateTimePicker VerticalAlignment="Top" />

                                                <SearchBar VerticalAlignment="Top"
                                                           Command="{Binding SearchTestCommand}"
                                                           Foreground="Violet"
                                                           IsDropDownOpen="{Binding IsDropDownOpen}"
                                                           IsDropDownOpenOnTextChanged="True"
                                                           MinDropDownWidth="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth}"
                                                           TextBoxAttach.PlaceHolder="请输入搜索内容..."
                                                           TextBoxAttach.Title="SearchBar："
                                                           TextBoxAttach.TitlePlacement="Top">
                                                    <StackPanel Orientation="Vertical">
                                                        <TextBlock>123abc</TextBlock>
                                                        <TextBlock>456</TextBlock>
                                                        <TextBlock>789</TextBlock>
                                                    </StackPanel>
                                                </SearchBar>
                                                <SearchBar VerticalAlignment="Top" />

                                                <TextBox VerticalAlignment="Top"
                                                         HorizontalContentAlignment="Right"
                                                         BorderThickness="0,0,0,2"
                                                         Text="{Binding CurrentDateTime}"
                                                         TextBoxAttach.PlaceHolder="请输入文本..."
                                                         TextBoxAttach.SuffixText="Time"
                                                         TextBoxAttach.Title="TextBox："
                                                         TextBoxAttach.TitlePlacement="Top" />

                                                <TextBox VerticalAlignment="Top"
                                                         Foreground="CornflowerBlue"
                                                         Text="{Binding NumericUpDownValue}"
                                                         TextBoxAttach.SuffixText="Ω" />
                                                <NumericUpDown x:Name="NumericUpDown"
                                                               VerticalAlignment="Top"
                                                               Maximum="100"
                                                               Minimum="-100"
                                                               StringFormat="${0}"
                                                               TextBoxAttach.Title="价格："
                                                               TextBoxAttach.TitlePlacement="Top"
                                                               Value="{Binding NumericUpDownValue}" />
                                                <NumericUpDown VerticalAlignment="Top" />
                                                <PasswordBox VerticalAlignment="Top"
                                                             Foreground="Purple"
                                                             TextBoxAttach.PlaceHolder="请输入密码..."
                                                             TextBoxAttach.Title="PasswordBox："
                                                             TextBoxAttach.TitlePlacement="Top" />
                                                <PasswordBox VerticalAlignment="Top" PasswordChar="#" />

                                                <PasswordTextBox VerticalAlignment="Top"
                                                                 Foreground="Indigo"
                                                                 Password="{Binding Password}"
                                                                 PasswordChar="$"
                                                                 TextBoxAttach.PlaceHolder="请输入密码..."
                                                                 TextBoxAttach.Title="PasswordTextBox："
                                                                 TextBoxAttach.TitlePlacement="Top" />
                                                <PasswordTextBox VerticalAlignment="Top"
                                                                 CanShowPassword="False"
                                                                 ClearButtonIsTabStop="True"
                                                                 ShowPasswordButtonIsTabStop="True" />

                                                <ComboBox VerticalAlignment="Top"
                                                          Foreground="Red"
                                                          ItemsSource="{EnumBindingSource EnumType=viewmodels:UserPermission}"
                                                          TextBoxAttach.PlaceHolder="IsEditable=False"
                                                          TextBoxAttach.Title="ComboBox："
                                                          TextBoxAttach.TitlePlacement="Top" />
                                                <ComboBox VerticalAlignment="Top"
                                                          IsEditable="True"
                                                          ItemsSource="{EnumBindingSource EnumType=viewmodels:UserPermission}"
                                                          TextBoxAttach.PlaceHolder="IsEditable=True" />

                                                <CheckComboBox VerticalAlignment="Top"
                                                               DisplayMemberPath="Name"
                                                               Foreground="Orange"
                                                               ItemsSource="{Binding Employees}"
                                                               TextBoxAttach.Title="CheckComboBox："
                                                               TextBoxAttach.TitlePlacement="Top" />
                                                <CheckComboBox VerticalAlignment="Top"
                                                               DisplayMemberPath="Description"
                                                               ItemsSource="{Binding Employees}"
                                                               SelectedItems="{Binding EmployeeSelectedItems}" />
                                                <Button VerticalAlignment="Top" Click="Button_Click_17">显示选中项</Button>
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="Control">
                                            <StackPanel Orientation="Horizontal">
                                                <ComboBox VerticalAlignment="Top">
                                                    <ComboBoxItem IsSelected="True">(未选择)</ComboBoxItem>
                                                </ComboBox>
                                                <CheckComboBox VerticalAlignment="Top" />
                                                <ComboBox VerticalAlignment="Top" IsEditable="True">
                                                    <ComboBoxItem IsSelected="True">(未选择)</ComboBoxItem>
                                                </ComboBox>
                                                <Button VerticalAlignment="Top">(未选择)</Button>
                                                <TextBox VerticalAlignment="Top" />
                                                <PasswordBox VerticalAlignment="Top" />
                                                <PasswordTextBox VerticalAlignment="Top" />
                                                <DateTimePicker VerticalAlignment="Top" />
                                                <SearchBar VerticalAlignment="Top" />
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="InputControlWithButtonTitle">
                                            <WrapPanel>
                                                <DateTimePicker Name="dateTimePicker"
                                                                Width="300"
                                                                Height="50"
                                                                HorizontalContentAlignment="Right"
                                                                VerticalContentAlignment="Bottom">
                                                    <TextBoxAttach.Title>
                                                        <Button>DateTimePicker：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入日期...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </DateTimePicker>
                                                <SearchBar Width="300"
                                                           Height="50"
                                                           HorizontalContentAlignment="Right"
                                                           VerticalContentAlignment="Bottom"
                                                           TextBoxAttach.PlaceHolderOpacity="1"
                                                           TextWrapping="Wrap">
                                                    <TextBoxAttach.Title>
                                                        <Button>SearchBar：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入搜索内容...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </SearchBar>
                                                <!--  TextBoxAttach.ShowValidationErrorInfo="False"  -->
                                                <TextBox Width="300"
                                                         Height="50"
                                                         HorizontalContentAlignment="Right"
                                                         VerticalContentAlignment="Bottom"
                                                         Text="{Binding Range, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                                                    <TextBoxAttach.Title>
                                                        <UniformGrid Columns="1"
                                                                     Focusable="False"
                                                                     IsHitTestVisible="False">
                                                            <Button>TextBox1：</Button>
                                                            <Button>TextBox2：</Button>
                                                        </UniformGrid>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入文本...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </TextBox>
                                                <PasswordBox Width="300"
                                                             Height="50"
                                                             HorizontalContentAlignment="Right"
                                                             VerticalContentAlignment="Bottom"
                                                             PasswordChar="$"
                                                             TextBoxAttach.PlaceHolderOpacity="1">
                                                    <TextBoxAttach.Title>
                                                        <Button>PasswordBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入密码...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </PasswordBox>
                                                <PasswordTextBox Name="passwordTextBox"
                                                                 Width="300"
                                                                 Height="50"
                                                                 HorizontalContentAlignment="Right"
                                                                 VerticalContentAlignment="Bottom"
                                                                 PasswordChar="◉"
                                                                 TextBoxAttach.PlaceHolderOpacity="1">
                                                    <TextBoxAttach.Title>
                                                        <Button>PasswordTextBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入密码...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </PasswordTextBox>
                                                <ComboBox Width="300"
                                                          Height="50"
                                                          HorizontalContentAlignment="Right"
                                                          VerticalContentAlignment="Bottom"
                                                          DisplayMemberPath="Name"
                                                          IsEditable="True"
                                                          IsReadOnly="True"
                                                          ItemsSource="{Binding Employees}">
                                                    <ComboBox.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <VirtualizingStackPanel />
                                                        </ItemsPanelTemplate>
                                                    </ComboBox.ItemsPanel>
                                                    <TextBoxAttach.Title>
                                                        <Button>ComboBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>IsReadOnly="True"</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </ComboBox>
                                                <CheckComboBox Name="checkComboBox"
                                                               Width="300"
                                                               Height="50"
                                                               HorizontalContentAlignment="Right"
                                                               VerticalContentAlignment="Bottom"
                                                               ItemDisplayStringFormat="权限：{0}"
                                                               ItemsSource="{EnumBindingSource EnumType=viewmodels:UserPermission,
                                                                                               IsIgnoreZero=True}"
                                                               SelectedAllString="{x:Null}"
                                                               SelectedItems="{Binding CurrentUserPermission}"
                                                               Separator="；"
                                                               TextWrapping="Wrap"
                                                               VirtualizingPanel.ScrollUnit="Pixel">
                                                    <TextBoxAttach.Title>
                                                        <Button>CheckComboBox：</Button>
                                                    </TextBoxAttach.Title>
                                                </CheckComboBox>
                                                <Button Width="300"
                                                        Height="50"
                                                        Click="Button_Click_18">
                                                    显示选中项
                                                </Button>
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="PathPicker">
                                            <StackPanel x:Name="stackPanel">
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开文件夹所在位置"
                                                            OpenButtonContent="打开文件夹"
                                                            TextBoxAttach.PlaceHolder="请选择文件夹..."
                                                            TextBoxAttach.Title="文件夹："
                                                            UseFolderDialog="True" />
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开文件所在位置"
                                                            Filter="Excel 工作簿|*.xlsx"
                                                            OpenButtonContent="打开文件"
                                                            TextBoxAttach.PlaceHolder="请选择保存的文件路径..."
                                                            TextBoxAttach.Title="保存文件："
                                                            UseSaveDialog="True" />
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开文件所在位置"
                                                            OpenButtonContent="打开文件"
                                                            TextBoxAttach.PlaceHolder="请选择文件..."
                                                            TextBoxAttach.Title="打开文件：" />
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开第一个文件所在位置"
                                                            Multiselect="True"
                                                            OpenButtonContent="打开第一个文件"
                                                            TextBoxAttach.PlaceHolder="请选择单个或多个文件..."
                                                            TextBoxAttach.Title="打开多个文件：" />
                                            </StackPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="Calendar">
                                            <Calendar BorderBrush="{DynamicResource EnvironmentMainWindowActiveDefaultBorder}" BorderThickness="1" />
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="ListBox">
                                            <Grid GridAttach.RowDefinitions="Auto,100">
                                                <UniformGrid Rows="1">
                                                    <Button Command="{Binding AddTestCommand}">Add</Button>
                                                    <Button Command="{Binding ResetNewCommand}">Reset new</Button>
                                                    <Button Command="{Binding ResetNullCommand}">Reset null</Button>
                                                    <CheckBox IsChecked="{Binding ElementName=selectorAttachListBox, Path=(SelectorAttach.IsAutoScrollToEnd)}">IsAutoScrollToEnd</CheckBox>
                                                </UniformGrid>
                                                <ListBox x:Name="selectorAttachListBox"
                                                         Grid.Row="1"
                                                         ItemsSource="{Binding SelectorAttachTest}"
                                                         SelectorAttach.IsAutoScrollToEnd="True" />
                                            </Grid>
                                        </GroupBox>
                                    </WrapPanel>
                                </ScrollViewer>
                            </LayoutDocument>
                            <LayoutDocument Title="EmbeddedWindow" CanClose="False">
                                <Grid GridAttach.RowDefinitions="Auto,*">
                                    <Button Click="Button_Click_20">ShutDown the EmbeddedWindow</Button>
                                    <AppHost x:Name="appHost"
                                             Grid.Row="1"
                                             Padding="10"
                                             BorderBrush="Purple"
                                             BorderThickness="1"
                                             ExePath="C:\Users\Xtone\Desktop\新建文件夹\FPS\FPS.exe" />
                                </Grid>
                            </LayoutDocument>
                        </LayoutDocumentPane>
                    </LayoutDocumentPaneGroup>
                    <LayoutAnchorablePaneGroup DockWidth="400">
                        <LayoutAnchorablePane>
                            <LayoutAnchorable Title="TreeView" ToolTip="This is a TreeView">
                                <DockPanel>
                                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                        <StackPanel.Resources>
                                            <Style BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="Button">
                                                <Setter Property="Focusable" Value="False" />
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button Command="{Binding TreeViewAddCommand}"
                                                Content="{PackIcon Kind=AddBox}"
                                                ToolTip="导入文件夹" />
                                        <Button Command="{Binding CollapseAllCommand}"
                                                Content="{PackIcon Kind=CollapseAll}"
                                                ToolTip="收起全部文件" />
                                        <Button Command="{x:Static model:TreeViewModel.ShowPropertiesCommand}"
                                                CommandParameter="{Binding TreeViewSelectedItem}"
                                                Content="{PackIcon Kind=Wrench}"
                                                ToolTip="属性" />
                                    </StackPanel>

                                    <TreeView DockPanel.Dock="Bottom"
                                              ItemsSource="{Binding TreeViewModels}"
                                              TreeViewAttach.IsSelectWithMouseRightDown="True"
                                              TreeViewAttach.SelectedItem="{Binding TreeViewSelectedItem}"
                                              TreeViewAttach.SelectedItemAttach="True"
                                              VirtualizingPanel.IsVirtualizing="True"
                                              VirtualizingPanel.VirtualizationMode="Recycling">
                                        <TreeView.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="TreeViewItem">
                                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu>
                                                            <ContextMenu.Resources>
                                                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
                                                                    <Setter Property="CommandParameter" Value="{Binding}" />
                                                                </Style>
                                                            </ContextMenu.Resources>
                                                            <MenuItem Command="{x:Static model:TreeViewModel.OpenFileLocationCommand}" Header="打开文件所在位置" />
                                                            <MenuItem Command="{x:Static model:TreeViewModel.CopyCommand}" Header="复制" />
                                                            <MenuItem Command="{x:Static model:TreeViewModel.CopyFullPathCommand}" Header="复制完整路径" />
                                                            <MenuItem Command="{x:Static model:TreeViewModel.StartRenameCommand}" Header="重命名" />
                                                            <MenuItem Command="{x:Static model:TreeViewModel.RemoveCommand}" Header="移除" />
                                                            <MenuItem Command="{x:Static model:TreeViewModel.DeleteFileCommand}" Header="移动到回收站" />
                                                            <MenuItem Command="{x:Static model:TreeViewModel.ShowPropertiesCommand}" Header="属性" />
                                                        </ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                        <TreeView.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Command="{Binding TreeViewAddCommand}" Header="导入文件夹" />
                                                <MenuItem Command="{Binding CollapseAllCommand}" Header="收起全部文件" />
                                            </ContextMenu>
                                        </TreeView.ContextMenu>
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                <DockPanel MouseDownAttach.Command="{x:Static model:TreeViewModel.OpenFileCommand}"
                                                           MouseDownAttach.CommandParameter="{Binding}"
                                                           MouseDownAttach.IgnoreElement="TextBoxView"
                                                           MouseDownAttach.MouseClickCount="2"
                                                           MouseDownAttach.MouseClickMode="Left"
                                                           ToolTip="{Binding FullPath}">
                                                    <Image Height="{Binding ElementName=Header, Path=ActualHeight}"
                                                           Margin="2,0,4,0"
                                                           Source="{Binding IconImageSource}" />
                                                    <TextBlock Name="Header"
                                                               HorizontalAlignment="Left"
                                                               Text="{Binding Header}"
                                                               Visibility="{Binding IsEditing, Converter={StaticResource BoolToCollapsedConverter}}" />
                                                    <TextBox Padding="0"
                                                             HorizontalAlignment="Left"
                                                             BorderThickness="0"
                                                             Text="{Binding Header}"
                                                             Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="LostFocus">
                                                                <i:InvokeCommandAction Command="{x:Static model:TreeViewModel.EndRenameCommand}" CommandParameter="{Binding}" />
                                                            </i:EventTrigger>
                                                            <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=IsVisible}" Value="true">
                                                                <i:InvokeCommandAction Command="{x:Static model:TreeViewModel.RenameVisibleCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}" />
                                                            </i:DataTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                </DockPanel>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </DockPanel>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="ListBox" ToolTip="This is a ListView">
                                <ListBox ItemsSource="{EnumBindingSource EnumType=viewmodels:UserPermission}" SelectionMode="Multiple" />
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="ListView" ToolTip="This is a ListView">
                                <ListView ItemsSource="{Binding Result}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Width="50"
                                                            DisplayMemberBinding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Converter={StaticResource ListViewIndexConverter}}"
                                                            Header="序号" />
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V0}" Header="V0" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V1}" Header="V1" />
                                            <GridViewColumn DisplayMemberBinding="{Binding RX}" Header="RX" />
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="PropertyGrid" ToolTip="This is a PropertyGrid">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <PropertyGrid SelectedObject="{Binding SelectedObject}"
                                                  VirtualizingPanel.IsVirtualizing="True"
                                                  VirtualizingPanel.VirtualizationMode="Recycling" />
                                    <Button Grid.Row="1" Click="Button_Click_3">显示InstrumentType选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_7">SelectedObject=MainWindow</Button>
                                </Grid>
                            </LayoutAnchorable>
                        </LayoutAnchorablePane>
                    </LayoutAnchorablePaneGroup>
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>
        <StatusBar Grid.Row="1" Padding="4">
            <StatusBar.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                </Style>
            </StatusBar.Resources>
            <PackIcon Kind="MessageBulleted" />
            <Button Width="Auto"
                    Margin="4,0"
                    Click="Button_Click_4">
                切换状态
            </Button>
            <StatusBarItem Content="{Binding StatusBarContent}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Button Margin="4,0"
                            Command="{Binding ZoomInCommand}"
                            Content="-" />
                    <Button Command="{Binding ZoomOutCommand}" Content="+" />
                    <TextBlock Margin="4,0" Text="{Binding WindowScale, StringFormat={}{0:P1}}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</ChromeWindow>