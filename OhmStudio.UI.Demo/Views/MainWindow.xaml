<ChromeWindow x:Class="OhmStudio.UI.Demo.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
              xmlns:converters="clr-namespace:OhmStudio.UI.Demo.Converters"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:demo="clr-namespace:OhmStudio.UI.Demo"
              xmlns:hc="https://handyorg.github.io/handycontrol"
              xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
              xmlns:local="clr-namespace:OhmStudio.UI.Demo.Views"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:omhui="http://ohmstudio.ui.com"
              xmlns:oxy="http://oxyplot.org/wpf"
              xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
              Title="{x:Static demo:App.Name}"
              Width="1280"
              Height="720"
              d:DataContext="{d:DesignInstance Type=local:MainWindow}"
              BorderAttach.CornerRadius="{Binding CornerRadius}"
              Icon="/icon.ico"
              IsShowIcon="False"
              IsShowTitle="False"
              ResizeMode="CanResizeWithGrip"
              SnapsToDevicePixels="{Binding IsAntiAliasing}"
              UseLayoutRounding="{Binding IsAntiAliasing}"
              WindowStartupLocation="CenterScreen"
              mc:Ignorable="d">

    <Window.LayoutTransform>
        <ScaleTransform ScaleX="{Binding WindowScale}" ScaleY="{Binding WindowScale}" />
    </Window.LayoutTransform>

    <Window.Resources>

        <converters:GroupItemConverter x:Key="GroupItemConverter" />
        <GroupIndexConverter x:Key="GroupIndexConverter" />
        <ListViewIndexConverter x:Key="ListViewIndexConverter" />
        <BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <BoolToCollapsedConverter x:Key="BoolToCollapsedConverter" />

    </Window.Resources>

    <ChromeWindow.LeftWindowCommands>
        <StackPanel Margin="6,6,0,6">
            <StackPanel Orientation="Horizontal">
                <Image Height="20" Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}" />
                <Menu VerticalAlignment="Center">
                    <MenuItem Header="文件(F)">
                        <MenuItem Header="新建" />
                        <MenuItem Header="打开" />
                        <MenuItem Header="关闭" InputGestureText="Alt+F4" />
                    </MenuItem>
                    <MenuItem Header="编辑(E)">
                        <MenuItem Header="复制" InputGestureText="Ctrl+C" />
                        <MenuItem Header="粘贴" InputGestureText="Ctrl+V" />
                        <MenuItem Header="删除" InputGestureText="Delete" />
                    </MenuItem>
                    <MenuItem Header="视图(V)">
                        <MenuItem Header="代码" />
                        <MenuItem Header="设计器" />
                        <MenuItem Header="在Blend中设计" />
                    </MenuItem>
                    <MenuItem Header="Git(G)">
                        <MenuItem Header="提取" />
                        <MenuItem Header="拉取" />
                        <MenuItem Header="推送" />
                        <MenuItem Header="同步(拉取然后推送)" />
                    </MenuItem>
                </Menu>
                <Separator Style="{StaticResource VerticalSeparator}" />
                <SearchBar Margin="10,0"
                           VerticalAlignment="Center"
                           Command="{Binding SearchCommand}"
                           TextBoxAttach.PlaceHolder="请输入搜索内容..." />
                <!--<CheckComboBox />-->
                <TextBox VerticalAlignment="Center"
                         Text="{Binding GlobalCornerRadius}"
                         TextBoxAttach.Title="全局圆角：" />
                <Border Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        IsHitTestVisible="False">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <TextBlock Margin="4"
                               HorizontalAlignment="Center"
                               FontWeight="Bold"
                               Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}">
                        <TextBlock.Style>
                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
            </StackPanel>
            <StackPanel Margin="0,6,0,0">
                <ToolBarTray VerticalAlignment="Top">
                    <ToolBar>
                        <Button Content="{PackIcon Kind=FileAdd}" ToolTip="新建项目" />
                        <Button Margin="4,0"
                                Content="{PackIcon Kind=FileOutline}"
                                ToolTip="打开文件" />
                        <Button Content="{PackIcon Kind=Save}" ToolTip="保存当前文件" />

                        <Button Margin="4,0,0,0"
                                Content="{PackIcon Kind=SaveAll}"
                                ToolTip="保存全部文件&amp;设置" />
                        <RadioButton>选择</RadioButton>
                        <RadioButton>不选择</RadioButton>
                        <CheckBox IsChecked="{Binding IsAntiAliasing}">抗锯齿</CheckBox>
                    </ToolBar>
                    <ToolBar BandIndex="1">
                        <ToolBar.Resources>
                            <Style BasedOn="{StaticResource {x:Type PackIcon}}" TargetType="PackIcon">
                                <Setter Property="Padding" Value="2" />
                            </Style>
                        </ToolBar.Resources>
                        <ComboBox>
                            <ComboBoxItem IsSelected="True">Debug</ComboBoxItem>
                            <ComboBoxItem>Release</ComboBoxItem>
                            <ComboBoxItem>配置管理器...</ComboBoxItem>
                        </ComboBox>
                        <ComboBox MinWidth="100" Margin="4,0">
                            <ComboBoxItem IsSelected="True">Any CPU</ComboBoxItem>
                            <ComboBoxItem>x64</ComboBoxItem>
                            <ComboBoxItem>x86</ComboBoxItem>
                        </ComboBox>
                        <ComboBox>
                            <ComboBoxItem IsSelected="True">
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <PackIcon Kind="PlayiOS" />
                                    <TextBlock Margin="6,0,0,0" Text="{x:Static demo:App.Name}" />
                                </StackPanel>
                            </ComboBoxItem>
                            <Separator />
                            <ComboBoxItem>
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <PackIcon Kind="SolidWrench" />
                                    <TextBlock Margin="6,0,0,0" Text="{x:Static demo:App.Name}" />
                                    <TextBlock Text=" 调试属性" />
                                </StackPanel>
                            </ComboBoxItem>
                            <ComboBoxItem>
                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">
                                    <PackIcon Kind="CogOutline" />
                                    <TextBlock Margin="6,0,0,0">配置启动项目...</TextBlock>
                                </StackPanel>
                            </ComboBoxItem>
                        </ComboBox>
                        <Button Margin="4,0" Content="{PackIcon Kind=PlayiOS}" />
                        <Button Content="{PackIcon Kind=Fire}" />
                        <Button Margin="4,0" Content="{PackIcon Kind=PauseiOS}" />
                        <Button Content="{PackIcon Kind=SquareiOS}" />
                        <Button Margin="4,0" Content="{PackIcon Kind=Refresh}" />
                    </ToolBar>
                </ToolBarTray>
            </StackPanel>
        </StackPanel>
    </ChromeWindow.LeftWindowCommands>

    <ChromeWindow.RightWindowCommands>
        <StackPanel Margin="0,6,0,0"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">
            <ComboBox ItemsSource="{Binding FontFamilyList}"
                      SelectedItem="{Binding CurrentFontFamily}"
                      TextBoxAttach.Title="全局字体：">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock FontFamily="{Binding FontFamily}" Text="{Binding Name}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <ComboBox Margin="6,0"
                      ItemsSource="{Binding FontSizeList}"
                      SelectedItem="{Binding CurrentFontSize}"
                      TextBoxAttach.Title="字体大小：" />
            <ComboBox ItemsSource="{Binding Source={EnumBindingSource ThemeType}}"
                      SelectedItem="{Binding CurrentTheme}"
                      TextBoxAttach.Title="主题：" />
            <Border Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                    Margin="6,0"
                    Background="Purple"
                    CornerRadiusAttach.IsCircular="True"
                    ToolTip="admin">
                <TextBlock HorizontalAlignment="Center" Foreground="White">ad</TextBlock>
            </Border>
            <Button Click="Button_Click_5"
                    Focusable="False"
                    Style="{StaticResource ToolBarButtonBaseStyle}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Name="txtLogin"
                               Margin="0,0,4,0"
                               Text="登录" />
                    <PackIcon Foreground="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" Kind="SolidUserPlus" />
                    <!--<LoadingCircle IsRunning="False">
                        <i:Interaction.Triggers>
                            <i:DataTrigger Binding="{Binding ElementName=txtLogin, Path=Text}" Value="登录">
                                <i:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" />
                                <i:ChangePropertyAction PropertyName="IsRunning" Value="false" />
                            </i:DataTrigger>
                            <i:DataTrigger Binding="{Binding ElementName=txtLogin, Path=Text}" Value="登录中...">
                                <i:ChangePropertyAction PropertyName="Visibility" Value="Visible" />
                                <i:ChangePropertyAction PropertyName="IsRunning" Value="true" />
                            </i:DataTrigger>
                        </i:Interaction.Triggers>
                    </LoadingCircle>-->
                </StackPanel>
            </Button>
        </StackPanel>

    </ChromeWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockingManager x:Name="dockingManager"
                        AutoHideDelay="0"
                        DocumentWrapPanelAttach.IsMouseWheelWrap="True"
                        DocumentWrapPanelAttach.IsWrap="True"
                        ShowSystemMenu="False">
            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal">
                    <LayoutDocumentPaneGroup>
                        <LayoutDocumentPane>
                            <LayoutDocument Title="Button">
                                <Grid GridAttach.RowDefinitions="Auto,Auto,Auto,*">
                                    <StackPanel Margin="0,10" Orientation="Horizontal">
                                        <Button Margin="10,0" Click="Button_Click">Show MessageBoxResult</Button>
                                        <Button Margin="10,0" Click="Button_Click_1">AlertDialog.Show</Button>
                                        <Button Margin="10,0" Click="Button_Click_2">GC</Button>
                                    </StackPanel>
                                    <StackPanel Grid.Row="1"
                                                Margin="0,10"
                                                Orientation="Horizontal">
                                        <Button Margin="10,0" Click="Button_Click_9">UIMessageTip.Show</Button>
                                        <Button Margin="10,0" Click="Button_Click_10">UIMessageTip.ShowOk</Button>
                                        <Button Margin="10,0" Click="Button_Click_11">UIMessageTip.ShowWarning</Button>
                                        <Button Margin="10,0" Click="Button_Click_12">UIMessageTip.ShowError</Button>
                                        <Button Margin="10,0" Click="Button_Click_13">UIMessageTip.ShowErrorMultiLine</Button>
                                    </StackPanel>
                                    <StackPanel Grid.Row="2"
                                                Margin="0,10"
                                                Orientation="Horizontal">
                                        <Button Margin="10,0" Style="{StaticResource Win10Button}">
                                            Win10Button
                                        </Button>
                                        <Button Margin="10,0"
                                                Click="Button_Click_14"
                                                Style="{StaticResource ClassicButton}">
                                            ClassicButton
                                        </Button>
                                        <Button Margin="10,0" Style="{StaticResource ClassicButtonBlue}">
                                            ClassicButtonBlue
                                        </Button>
                                        <Button Margin="10,0"
                                                ButtonAttach.PressedBackground="IndianRed"
                                                ButtonAttach.PressedBorderBrush="IndianRed"
                                                Style="{StaticResource ClassicButtonGreen}">
                                            ClassicButtonGreen
                                        </Button>
                                        <Button Margin="10,0" Style="{StaticResource ClassicButtonRed}">
                                            ClassicButtonRed
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="DataGrid">
                                <UniformGrid Rows="3">
                                    <UniformGrid.Resources>
                                        <CollectionViewSource x:Key="ItemCollectionViewSource"
                                                              IsLiveGroupingRequested="True"
                                                              IsLiveSortingRequested="True"
                                                              Source="{Binding Employees}">
                                            <CollectionViewSource.GroupDescriptions>
                                                <PropertyGroupDescription PropertyName="Name" />

                                            </CollectionViewSource.GroupDescriptions>
                                            <CollectionViewSource.SortDescriptions>
                                                <!--  Requires 'xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"' declaration.  -->
                                                <scm:SortDescription PropertyName="Name" />
                                                <scm:SortDescription PropertyName="Value" />
                                                <scm:SortDescription PropertyName="Description" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>
                                    </UniformGrid.Resources>
                                    <GroupBox Margin="10" Header="DataGridWithGroup">
                                        <DataGrid AutoGenerateColumns="False"
                                                  CanUserAddRows="False"
                                                  DataGridAttach.IsSelectionChangedUpdateRowNumber="True"
                                                  DataGridAttach.IsShowRowNumber="True"
                                                  ItemsSource="{Binding Source={StaticResource ItemCollectionViewSource}}"
                                                  VirtualizingPanel.IsVirtualizing="True"
                                                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                                  VirtualizingPanel.VirtualizationMode="Recycling">
                                            <!--  定义需要显示的列  -->
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                                <DataGridTextColumn Binding="{Binding Value}" Header="Value" />
                                                <DataGridTextColumn Binding="{Binding Password}"
                                                                    DataGridColumnAttach.IsIgnoreElementStyle="True"
                                                                    ElementStyle="{StaticResource TextBlockPassword}"
                                                                    Header="密码" />
                                                <DataGridTemplateColumn Header="密码">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <PasswordTextBox BorderThickness="0" Password="{Binding Password}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="时间">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <DateTimePicker BorderThickness="0" Foreground="IndianRed" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.GroupStyle>
                                                <GroupStyle>
                                                    <GroupStyle.ContainerStyle>
                                                        <Style TargetType="GroupItem">
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="GroupItem">
                                                                        <Expander Background="{DynamicResource DataGridGroupItemHeaderBackground}" IsExpanded="{Binding Path=Items[0].IsExpanded, FallbackValue=True, TargetNullValue=True}">
                                                                            <Expander.Header>
                                                                                <StackPanel Orientation="Horizontal">
                                                                                    <TextBlock>
                                                                                        <TextBlock.Text>
                                                                                            <MultiBinding Converter="{StaticResource GroupIndexConverter}">
                                                                                                <Binding Path="ItemsSource.Groups" RelativeSource="{RelativeSource AncestorType=ItemsControl}" />
                                                                                                <Binding Path="DataContext" RelativeSource="{RelativeSource Mode=Self}" />
                                                                                            </MultiBinding>
                                                                                        </TextBlock.Text>
                                                                                    </TextBlock>
                                                                                    <TextBlock Margin="20,0" Text="{Binding Path=Name, StringFormat=分组：{0}}" />
                                                                                    <TextBlock Text="{Binding Path=ItemCount, StringFormat=数量：{0}}" />
                                                                                </StackPanel>
                                                                            </Expander.Header>
                                                                            <ItemsPresenter />
                                                                        </Expander>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </GroupStyle.ContainerStyle>
                                                </GroupStyle>
                                            </DataGrid.GroupStyle>
                                            <DataGrid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Click="MenuItem_Click" Header="全部展开" />
                                                    <MenuItem Click="MenuItem_Click_1" Header="全部折叠" />
                                                </ContextMenu>
                                            </DataGrid.ContextMenu>
                                        </DataGrid>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="DataGridWithAutoGenerateColumns">
                                        <DataGrid CellEditEnding="DataGrid_CellEditEnding"
                                                  DataGridAttach.IsEnableEditBoxAssist="True"
                                                  DataGridAttach.IsShowRowNumber="True"
                                                  ItemsSource="{Binding Employees}"
                                                  RowDetailsVisibilityMode="VisibleWhenSelected"
                                                  ScrollViewerAttach.Orientation="Horizontal">
                                            <DataGrid.RowDetailsTemplate>
                                                <DataTemplate>
                                                    <DropShadowControl Margin="4"
                                                                       Background="Orange"
                                                                       ShadowBrush="Orange">
                                                        <TextBlock Text="{Binding InstrumentType}" />
                                                    </DropShadowControl>
                                                </DataTemplate>
                                            </DataGrid.RowDetailsTemplate>
                                        </DataGrid>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="DataGridWithManualGenerateColumns">
                                        <DataGrid AutoGenerateColumns="False"
                                                  CanUserAddRows="False"
                                                  DataGridAttach.IsShowRowNumber="True"
                                                  ItemsSource="{Binding Employees}"
                                                  SelectionUnit="CellOrRowHeader">
                                            <DataGrid.Columns>
                                                <!--<DataGridHyperlinkColumn Header="Header" Binding="{Binding Name}"></DataGridHyperlinkColumn>-->
                                                <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                                <DataGridCheckBoxColumn Binding="{Binding IsExpanded}" Header="IsExpanded" />
                                                <DataGridComboBoxColumn Header="Name1" ItemsSource="{EnumBindingSource local:InstrumentType}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </GroupBox>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="RollBox">
                                <Grid GridAttach.RowDefinitions="*,Auto,Auto">
                                    <RollBox Name="rollBox"
                                             DockPanel.Dock="Top"
                                             RollingInterval="3">
                                        <RollBox.ItemsSource>
                                            <!--<Image Source="https://pic4.zhimg.com/v2-177d137cb3266e217cc0bb45c2e5b1ef_r.jpg" />
                                            <Image Source="https://pic3.zhimg.com/v2-1260ce85d93a13a45a3bd7b224634222_r.jpg" />-->
                                            <Image Source="https://pica.zhimg.com/v2-a23f3078d20eba31f367a605cdb94c14_r.jpg?source=1940ef5c" />
                                            <Image Source="/Images/1.jpg" />
                                            <Image Source="/Images/1a.jpg" />
                                            <Image Source="/Images/1b.jpg" />
                                            <Image Source="/Images/2.jpg" />
                                            <Image Source="/Images/2a.jpg" />
                                            <Image Source="/Images/3.jpg" />
                                            <Image Source="/Images/3a.jpg" />
                                            <Button>Button</Button>
                                            <UniformGrid Columns="1" Rows="2">
                                                <Button>Button1</Button>
                                                <Button>Button2</Button>
                                            </UniformGrid>
                                        </RollBox.ItemsSource>
                                    </RollBox>
                                    <Button Grid.Row="1" Click="Button_Click_15">
                                        切换ItemsSource
                                    </Button>
                                    <Grid Grid.Row="2">
                                        <TextBlock Text="{Binding ElementName=rollBox, Path=RollingInterval, StringFormat=当前滚动间隔：{0}s}" />
                                        <TextBlock HorizontalAlignment="Right" Text="{Binding ElementName=rollBox, Path=ItemsSource.Count, StringFormat=ItemsSource.Count:{0}}" />
                                    </Grid>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="TextEditor">
                                <TabControl>
                                    <TabItem Header="XML">
                                        <avalonEdit:TextEditor x:Name="textEditorxml"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="XML" />
                                    </TabItem>
                                    <TabItem Header="C#">
                                        <avalonEdit:TextEditor x:Name="textEditorcs"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C#" />
                                    </TabItem>
                                    <TabItem Header="C++">
                                        <avalonEdit:TextEditor x:Name="textEditorcpp"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C++" />
                                    </TabItem>
                                </TabControl>
                            </LayoutDocument>
                            <LayoutDocument Title="ProgressBar">
                                <UniformGrid Rows="2">
                                    <GroupBox Margin="10" Header="ProgressBar">
                                        <UniformGrid>
                                            <ProgressBar Height="50"
                                                         VerticalAlignment="Center"
                                                         IsIndeterminate="True"
                                                         Style="{x:Null}"
                                                         Value="50" />

                                            <ProgressBar Orientation="Vertical"
                                                         ProgressBarAttach.Text="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Value, StringFormat=当前总进度：{0}%}"
                                                         Value="60" />

                                            <ProgressBar Height="50"
                                                         VerticalAlignment="Center"
                                                         IsIndeterminate="True"
                                                         Value="50" />
                                            <ProgressBar VerticalAlignment="Center"
                                                         ProgressBarAttach.Text="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Value, StringFormat=当前总进度：{0}%}"
                                                         Value="60" />
                                        </UniformGrid>
                                    </GroupBox>

                                    <GroupBox Margin="10" Header="CircleProgressBar">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Slider IsSnapToTickEnabled="True"
                                                    Maximum="100"
                                                    Minimum="0"
                                                    TickPlacement="Both"
                                                    Value="{Binding ProgressBarValue}" />
                                            <UniformGrid Grid.Row="1" Columns="4">
                                                <CircleProgressBar BorderBrush="#FF06B025" Value="{Binding ProgressBarValue}" />
                                                <CircleProgressBar Title="进度"
                                                                   HorizontalContentAlignment="Left"
                                                                   VerticalContentAlignment="Top"
                                                                   Value="{Binding ProgressBarValue}" />
                                                <CircleProgressBar BorderBrush="{DynamicResource ProgressBarProgress}" Value="50" />
                                                <CircleProgressBar Title="计划" Value="3.14159" />
                                                <LoadingLine />
                                                <LoadingCircle />
                                            </UniformGrid>
                                        </Grid>
                                    </GroupBox>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="DocumentWrapPanel">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Button Click="Button_Click_8">换行/不换行</Button>
                                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                        <DocumentWrapPanel VerticalAlignment="Top" IsWrap="{Binding DocumentWrapPanelIsWrap}">
                                            <DocumentWrapPanel.Resources>
                                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                                    <Setter Property="Height" Value="100" />
                                                    <Setter Property="Width" Value="100" />
                                                    <Setter Property="Margin" Value="10" />
                                                </Style>
                                            </DocumentWrapPanel.Resources>
                                            <Button>1</Button>
                                            <Button>2</Button>
                                            <Button>3</Button>
                                            <Button>4</Button>
                                            <Button>5</Button>
                                            <Button>6</Button>
                                            <Button>7</Button>
                                            <Button>8</Button>
                                            <Button>9</Button>
                                            <Button>10</Button>
                                            <Button>11</Button>
                                            <Button>12</Button>
                                            <Button>13</Button>
                                            <Button>14</Button>
                                            <Button>15</Button>
                                            <Button>16</Button>
                                            <Button>17</Button>
                                            <Button>18</Button>
                                            <Button>19</Button>
                                            <Button>20</Button>
                                        </DocumentWrapPanel>
                                    </ScrollViewer>
                                    <TextBlock Grid.Row="2" Text="{Binding DocumentWrapPanelIsWrap, StringFormat=是否换行：{0}}" />
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="GifImage">
                                <UniformGrid Columns="2" Rows="2">
                                    <UniformGrid.Resources>
                                        <Style BasedOn="{StaticResource {x:Type GifImage}}" TargetType="GifImage">
                                            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                                            <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                        </Style>
                                    </UniformGrid.Resources>
                                    <GroupBox Margin="10" Header="本地资源">
                                        <GifImage BorderBrush="Green"
                                                  BorderThickness="2"
                                                  Source="/Images/car_chase.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络资源">
                                        <GifImage BorderBrush="Orange"
                                                  BorderThickness="10"
                                                  Source="https://img.lanrentuku.com/img/allimg/1206/5-120601152054-50.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络资源">
                                        <GifImage BorderBrush="YellowGreen"
                                                  BorderThickness="20"
                                                  Source="https://img.lanrentuku.com/img/allimg/1212/5-121204193Q8.gif" />
                                    </GroupBox>
                                    <!--<Image ImageBehavior.AnimatedSource="/Images/car_chase.gif"/>-->
                                    <!--<hc:GifImage Uri="/Images/car_chase.gif"  />-->
                                </UniformGrid>

                            </LayoutDocument>
                            <LayoutDocument Title="UserInfos">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <DataGrid DataGridAttach.IsShowRowNumber="True"
                                              ItemsSource="{Binding UserInfos}"
                                              SelectorAttach.SelectedItems="{Binding UserInfoSelectedItems}"
                                              SelectorAttach.SelectedItemsAttach="True" />
                                    <Button Grid.Row="1" Command="{Binding StartCommand}">显示选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_6">禁用/启用</Button>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="GroupBox">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <GroupBox Margin="10"
                                              Background="Orange"
                                              BorderBrush="Blue"
                                              DropShadowAttach.ShadowColor="Orange"
                                              Header="GroupBox">
                                        <TextBox>GroupBox</TextBox>
                                    </GroupBox>
                                    <DropShadowControl Grid.Row="1"
                                                       Margin="10"
                                                       Background="OrangeRed"
                                                       BlurRadius="40"
                                                       BorderBrush="Gray"
                                                       BorderThickness="2"
                                                       CornerRadius="10"
                                                       ShadowColor="IndianRed"
                                                       ShadowDepth="0">
                                        <TextBox Margin="10">DropShadowControl</TextBox>
                                    </DropShadowControl>
                                    <Border Grid.Row="2"
                                            Margin="10"
                                            Background="Green">
                                        <TextBox Margin="10">Border</TextBox>
                                    </Border>
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="ToggleButton">
                                <WrapPanel VerticalAlignment="Top" Orientation="Horizontal">
                                    <GroupBox Margin="10" Header="RadioButton">
                                        <WrapPanel Orientation="Horizontal">
                                            <RadioButton />
                                            <RadioButton>RadioButton</RadioButton>
                                            <RadioButton>123</RadioButton>
                                            <RadioButton>456</RadioButton>
                                            <RadioButton RadioButtonAttach.RadioButtonSize="30" />
                                            <RadioButton RadioButtonAttach.RadioButtonSize="40" />
                                            <RadioButton RadioButtonAttach.RadioButtonSize="50" />
                                        </WrapPanel>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="CheckBox">
                                        <WrapPanel Orientation="Horizontal">
                                            <CheckBox />
                                            <CheckBox Content="CheckBox" IsChecked="{x:Null}" />
                                            <CheckBox CheckBoxAttach.CheckBoxSize="30" IsChecked="{x:Null}" />
                                            <CheckBox CheckBoxAttach.CheckBoxSize="40" IsChecked="{x:Null}" />
                                            <CheckBox CheckBoxAttach.CheckBoxSize="50" IsChecked="{x:Null}" />
                                        </WrapPanel>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="ToggleButton">
                                        <WrapPanel Orientation="Horizontal">
                                            <ToggleButton>ToggleButton</ToggleButton>
                                            <ToggleButton Height="30">ToggleButton</ToggleButton>
                                            <ToggleButton Height="40">ToggleButton</ToggleButton>
                                            <ToggleButton Height="50">ToggleButton</ToggleButton>
                                        </WrapPanel>
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="ToggleButtonSwitchStyle">
                                        <WrapPanel Orientation="Horizontal">
                                            <ToggleButton Style="{StaticResource ToggleButtonSwitch}" />
                                            <ToggleButton Height="30" Style="{StaticResource ToggleButtonSwitch}" />
                                            <ToggleButton Height="40" Style="{StaticResource ToggleButtonSwitch}" />
                                            <ToggleButton Height="50" Style="{StaticResource ToggleButtonSwitch}" />
                                        </WrapPanel>
                                    </GroupBox>
                                </WrapPanel>
                            </LayoutDocument>
                            <LayoutDocument Title="TextBlock">
                                <GroupBox Margin="10" Header="TextHighlight">
                                    <UniformGrid Columns="2">
                                        <UniformGrid.Resources>
                                            <DataTemplate x:Key="TextHighlight">
                                                <TextBlock Text="{Binding}" TextBlockAttach.HighlightText="{Binding ElementName=hightLight, Path=Text}" />
                                            </DataTemplate>
                                        </UniformGrid.Resources>
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding DengGao}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding JingYeSi}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding HuangHeLou}" />
                                        <ListBox ItemTemplate="{StaticResource TextHighlight}" ItemsSource="{Binding DengGuanQueLou}" />
                                        <TextBlock TextBlockAttach.HighlightText="{Binding ElementName=hightLight, Path=Text}" TextWrapping="Wrap">
                                            WrapPanel控件：该控件根据Orientation属性，在垂直叠放控件或者在行中放置控件方面，WrapPanel与StackPanel类似。除了叠放外，WrapPanel还未包含的控件提供了换行支持，因此，如果在WrapPanel
                                            中放入超过其容器宽度的内容时，这些控件被换行显示以形成换行效果。
                                        </TextBlock>
                                        <TextBox Name="hightLight"
                                                 VerticalAlignment="Center"
                                                 TextBoxAttach.Title="请输入搜索的关键字：">
                                            白
                                        </TextBox>
                                    </UniformGrid>
                                </GroupBox>
                            </LayoutDocument>
                            <LayoutDocument Title="DragCanvas">
                                <Grid GridAttach.RowDefinitions="*,Auto">
                                    <DragCanvas Name="dragCanvas">
                                        <DragCanvas.Resources>
                                            <Style BasedOn="{StaticResource {x:Type StepItem}}" TargetType="StepItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            </Style>
                                        </DragCanvas.Resources>
                                        <StepItem Content="开始" StepType="Begin" />
                                        <StepItem Canvas.Left="80"
                                                  Canvas.Top="80"
                                                  Content="中间节点1" />
                                        <StepItem Canvas.Left="160"
                                                  Canvas.Top="160"
                                                  Content="中间节点2" />
                                        <StepItem Canvas.Left="240"
                                                  Canvas.Top="240"
                                                  Content="中间节点3" />
                                        <StepItem Canvas.Left="320"
                                                  Canvas.Top="320"
                                                  Content="标记节点"
                                                  StepType="Reference" />
                                        <StepItem Canvas.Left="400"
                                                  Canvas.Top="400"
                                                  Content="条件节点"
                                                  StepType="Condition" />
                                        <StepItem Canvas.Left="480"
                                                  Canvas.Top="480"
                                                  Content="中间节点5" />
                                        <StepItem Canvas.Left="560"
                                                  Canvas.Top="560"
                                                  Content="结束"
                                                  StepType="End" />
                                        <StepItem Canvas.Left="640"
                                                  Canvas.Top="640"
                                                  Content="结束·不可拖拽"
                                                  DragCanvas.IsDraggable="False"
                                                  StepType="End" />
                                    </DragCanvas>

                                    <Grid Grid.Row="1">
                                        <TextBlock>
                                            <Run Text="{Binding ElementName=dragCanvas, Path=MousePosition.X, StringFormat=X:{0}}" />
                                            <Run Text="{Binding ElementName=dragCanvas, Path=MousePosition.Y, StringFormat=Y:{0}}" />
                                        </TextBlock>
                                        <TextBlock HorizontalAlignment="Right">
                                            <Run Text="{Binding ElementName=dragCanvas, Path=(DragCanvas.CanvasStatus), StringFormat=CanvasStatus:{0}}" />
                                            <Run Text="{Binding ElementName=dragCanvas, Path=Scale, StringFormat=Zoom:{0}}" />
                                        </TextBlock>
                                    </Grid>

                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="PackIcons">
                                <DockPanel>
                                    <Grid DockPanel.Dock="Bottom">
                                        <TextBlock Text="{Binding ElementName=packIconsListBox, Path=SelectedItem, StringFormat=SelectedItem:{0}}" />
                                        <TextBlock HorizontalAlignment="Right" Text="{Binding PackIcons.Count, StringFormat=PackIcons.Count:{0}}" />
                                    </Grid>
                                    <ListBox x:Name="packIconsListBox"
                                             BorderThickness="0"
                                             DockPanel.Dock="Top"
                                             ItemsSource="{Binding PackIcons}"
                                             ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel Width="64"
                                                           Height="64"
                                                           Margin="5"
                                                           ToolTip="{Binding}">
                                                    <TextBlock HorizontalAlignment="Center"
                                                               DockPanel.Dock="Bottom"
                                                               Text="{Binding}" />
                                                    <PackIcon Width="24"
                                                              Height="24"
                                                              DockPanel.Dock="Top"
                                                              Kind="{Binding}" />
                                                </DockPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ListBox>
                                </DockPanel>
                            </LayoutDocument>
                            <LayoutDocument Title="Other"
                                            CanClose="False"
                                            Description="其他"
                                            IsSelected="True"
                                            ToolTip="Other">
                                <ScrollViewer HorizontalScrollBarVisibility="Disabled">
                                    <!--<Grid>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="BasicBrush" StartPoint="0.499,1" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="#08000000" />
                                                    <GradientStop Offset="1.0" Color="#03000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="BasicBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="0.0,1"
                                                                            To="1,1"
                                                                            Duration="0:0:40" />
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="BasicBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="0.001,1"
                                                                            To="1,1"
                                                                            Duration="0:0:40" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="ThirdBrush" StartPoint="0.499,1" EndPoint="0.5,1">
                                                    <GradientStop Offset="0.0" Color="#08000000" />
                                                    <GradientStop Offset="1.0" Color="#03000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="0.0,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="0.001,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation BeginTime="0:0:15"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="0.0,1"
                                                                            Duration="0:0:15" />
                                                            <PointAnimation BeginTime="0:0:15"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="ThirdBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="0.001,1"
                                                                            Duration="0:0:15" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush x:Name="SecondBrush" StartPoint="1,0.499" EndPoint="1,0.5">
                                                    <GradientStop Offset="0.0" Color="#02000000" />
                                                    <GradientStop Offset="1.0" Color="#07000000" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="SecondBrush"
                                                                            Storyboard.TargetProperty="StartPoint"
                                                                            From="1,1"
                                                                            To="1,0"
                                                                            Duration="0:0:20" />
                                                            <PointAnimation AutoReverse="True"
                                                                            FillBehavior="HoldEnd"
                                                                            RepeatBehavior="Forever"
                                                                            Storyboard.TargetName="SecondBrush"
                                                                            Storyboard.TargetProperty="EndPoint"
                                                                            From="1,1"
                                                                            To="1,0.001"
                                                                            Duration="0:0:20" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                    </Grid>-->

                                    <WrapPanel>
                                        <GroupBox Margin="10" Header="InputControl">
                                            <WrapPanel>
                                                <DateTimePicker VerticalAlignment="Top"
                                                                DateTimeFormat="yyyy-MM-dd"
                                                                DisplayDateEnd="2022-1-1 13:00:00"
                                                                DisplayDateStart="2020-1-1"
                                                                Foreground="Green"
                                                                IsDateOnly="True"
                                                                SelectedDateTime="{Binding CurrentDateTime}"
                                                                TextBoxAttach.PlaceHolder="请选择日期..."
                                                                TextBoxAttach.Title="DateTimePicker："
                                                                TextBoxAttach.TitlePlacement="Top" />
                                                <DateTimePicker VerticalAlignment="Top" />

                                                <SearchBar VerticalAlignment="Top"
                                                           Foreground="Violet"
                                                           TextBoxAttach.PlaceHolder="请输入搜索内容..."
                                                           TextBoxAttach.Title="SearchBar："
                                                           TextBoxAttach.TitlePlacement="Top" />
                                                <SearchBar VerticalAlignment="Top" />

                                                <TextBox VerticalAlignment="Top"
                                                         BorderThickness="0,0,0,2"
                                                         Text="{Binding CurrentDateTime}"
                                                         TextBoxAttach.PlaceHolder="请输入文本..."
                                                         TextBoxAttach.Title="TextBox："
                                                         TextBoxAttach.TitlePlacement="Top" />

                                                <TextBox VerticalAlignment="Top"
                                                         Foreground="CornflowerBlue"
                                                         Text="{Binding NumericUpDownValue}" />
                                                <NumericUpDown x:Name="NumericUpDown"
                                                               VerticalAlignment="Top"
                                                               Maximum="100"
                                                               Minimum="-100"
                                                               StringFormat="${0}"
                                                               TextBoxAttach.Title="价格："
                                                               TextBoxAttach.TitlePlacement="Top"
                                                               Value="{Binding NumericUpDownValue}" />
                                                <NumericUpDown VerticalAlignment="Top" />
                                                <PasswordBox VerticalAlignment="Top"
                                                             Foreground="Purple"
                                                             TextBoxAttach.PlaceHolder="请输入密码..."
                                                             TextBoxAttach.Title="PasswordBox："
                                                             TextBoxAttach.TitlePlacement="Top" />
                                                <PasswordBox VerticalAlignment="Top" PasswordChar="#" />

                                                <PasswordTextBox VerticalAlignment="Top"
                                                                 CanShowPassword="False"
                                                                 Foreground="Indigo"
                                                                 PasswordChar="$"
                                                                 TextBoxAttach.PlaceHolder="请输入密码..."
                                                                 TextBoxAttach.Title="PasswordTextBox："
                                                                 TextBoxAttach.TitlePlacement="Top" />
                                                <PasswordTextBox VerticalAlignment="Top"
                                                                 ClearButtonIsTabStop="True"
                                                                 ShowPasswordButtonIsTabStop="True" />

                                                <ComboBox VerticalAlignment="Top"
                                                          Foreground="Red"
                                                          ItemsSource="{EnumBindingSource EnumType=local:UserPermission}"
                                                          TextBoxAttach.PlaceHolder="IsEditable=False"
                                                          TextBoxAttach.Title="ComboBox："
                                                          TextBoxAttach.TitlePlacement="Top" />
                                                <ComboBox VerticalAlignment="Top"
                                                          IsEditable="True"
                                                          ItemsSource="{EnumBindingSource EnumType=local:UserPermission}"
                                                          TextBoxAttach.PlaceHolder="IsEditable=True" />

                                                <CheckComboBox VerticalAlignment="Top"
                                                               DisplayMemberPath="Name"
                                                               Foreground="Orange"
                                                               ItemsSource="{Binding Employees}"
                                                               TextBoxAttach.Title="CheckComboBox："
                                                               TextBoxAttach.TitlePlacement="Top" />
                                                <CheckComboBox VerticalAlignment="Top"
                                                               DisplayMemberPath="Description"
                                                               ItemsSource="{Binding Employees}"
                                                               SelectedItems="{Binding EmployeeSelectedItems}" />
                                                <Button VerticalAlignment="Top" Click="Button_Click_17">显示选中项</Button>
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="InputControlWithButtonTitle">
                                            <WrapPanel>
                                                <DateTimePicker Name="dateTimePicker"
                                                                Width="300"
                                                                Height="50"
                                                                HorizontalContentAlignment="Right"
                                                                VerticalContentAlignment="Bottom"
                                                                TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>DateTimePicker：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入日期...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </DateTimePicker>
                                                <SearchBar Width="300"
                                                           Height="50"
                                                           HorizontalContentAlignment="Right"
                                                           VerticalContentAlignment="Bottom"
                                                           TextBoxAttach.PlaceHolderOpacity="1"
                                                           TextBoxAttach.TitleIsHitTestVisible="True"
                                                           TextWrapping="Wrap">
                                                    <TextBoxAttach.Title>
                                                        <Button>SearchBar：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入搜索内容...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </SearchBar>
                                                <TextBox Width="300"
                                                         Height="50"
                                                         HorizontalContentAlignment="Right"
                                                         VerticalContentAlignment="Bottom"
                                                         TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <UniformGrid Columns="1">
                                                            <Button>TextBox1：</Button>
                                                            <Button>TextBox2：</Button>
                                                        </UniformGrid>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入文本...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </TextBox>
                                                <PasswordBox Width="300"
                                                             Height="50"
                                                             HorizontalContentAlignment="Right"
                                                             VerticalContentAlignment="Bottom"
                                                             PasswordChar="$"
                                                             TextBoxAttach.PlaceHolderOpacity="1"
                                                             TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>PasswordBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入密码...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </PasswordBox>
                                                <PasswordTextBox Name="passwordTextBox"
                                                                 Width="300"
                                                                 Height="50"
                                                                 HorizontalContentAlignment="Right"
                                                                 VerticalContentAlignment="Bottom"
                                                                 PasswordChar="◉"
                                                                 TextBoxAttach.PlaceHolderIsHitTestVisible="False"
                                                                 TextBoxAttach.PlaceHolderOpacity="1"
                                                                 TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>PasswordTextBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>请输入密码...</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </PasswordTextBox>
                                                <ComboBox Width="300"
                                                          Height="50"
                                                          HorizontalContentAlignment="Right"
                                                          VerticalContentAlignment="Bottom"
                                                          DisplayMemberPath="Name"
                                                          IsEditable="True"
                                                          IsReadOnly="True"
                                                          ItemsSource="{Binding Employees}"
                                                          TextBoxAttach.TitleIsHitTestVisible="True">
                                                    <TextBoxAttach.Title>
                                                        <Button>ComboBox：</Button>
                                                    </TextBoxAttach.Title>
                                                    <TextBoxAttach.PlaceHolder>
                                                        <Button>IsReadOnly="True"</Button>
                                                    </TextBoxAttach.PlaceHolder>
                                                </ComboBox>
                                                <CheckComboBox Name="checkComboBox"
                                                               Width="300"
                                                               Height="50"
                                                               HorizontalContentAlignment="Right"
                                                               VerticalContentAlignment="Bottom"
                                                               ItemDisplayStringFormat="权限：{0}"
                                                               ItemsSource="{EnumBindingSource EnumType=local:UserPermission,
                                                                                               IsIgnoreZero=True}"
                                                               SelectedAllString="{x:Null}"
                                                               SelectedItems="{Binding CurrentUserPermission}"
                                                               Separator="；"
                                                               TextBoxAttach.TitleIsHitTestVisible="True"
                                                               TextWrapping="Wrap"
                                                               VirtualizingPanel.ScrollUnit="Pixel">
                                                    <TextBoxAttach.Title>
                                                        <Button>CheckComboBox：</Button>
                                                    </TextBoxAttach.Title>
                                                </CheckComboBox>
                                                <Button Width="300"
                                                        Height="50"
                                                        Click="Button_Click_18">
                                                    显示选中项
                                                </Button>
                                            </WrapPanel>
                                        </GroupBox>
                                        <GroupBox Margin="10" Header="PathPicker">
                                            <StackPanel x:Name="stackPanel">
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开文件夹所在位置"
                                                            IsFolder="True"
                                                            OpenButtonContent="打开文件夹"
                                                            TextBoxAttach.PlaceHolder="请选择文件夹..."
                                                            TextBoxAttach.Title="文件夹：" />
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开文件所在位置"
                                                            Filter="Excel 工作簿|*.xlsx"
                                                            IsSave="True"
                                                            OpenButtonContent="打开文件"
                                                            TextBoxAttach.PlaceHolder="请选择保存的文件路径..."
                                                            TextBoxAttach.Title="保存文件：" />
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开文件所在位置"
                                                            OpenButtonContent="打开文件"
                                                            TextBoxAttach.PlaceHolder="请选择文件..."
                                                            TextBoxAttach.Title="打开文件：" />
                                                <PathPicker MinWidth="200"
                                                            ExploreButtonContent="打开第一个文件所在位置"
                                                            Multiselect="True"
                                                            OpenButtonContent="打开第一个文件"
                                                            TextBoxAttach.PlaceHolder="请选择单个或多个文件..."
                                                            TextBoxAttach.Title="打开多个文件：" />
                                                <Button Click="Button_Click_16">截图当前界面</Button>
                                            </StackPanel>
                                        </GroupBox>
                                    </WrapPanel>
                                </ScrollViewer>
                            </LayoutDocument>
                        </LayoutDocumentPane>
                    </LayoutDocumentPaneGroup>
                    <LayoutAnchorablePaneGroup DockWidth="400">
                        <LayoutAnchorablePane>
                            <LayoutAnchorable Title="TreeView" ToolTip="This is a TreeView">
                                <DockPanel>
                                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                                        <StackPanel.Resources>
                                            <Style BasedOn="{StaticResource ToolBarButtonBaseStyle}" TargetType="Button">
                                                <Setter Property="Focusable" Value="False" />
                                            </Style>
                                        </StackPanel.Resources>
                                        <Button Command="{Binding CollapseAllCommand}" Content="{PackIcon Kind=CollapseAll}" />
                                        <Button Command="{x:Static local:TreeViewModel.ShowPropertiesCommand}"
                                                CommandParameter="{Binding TreeViewSelectedItem}"
                                                Content="{PackIcon Kind=Wrench}" />
                                    </StackPanel>

                                    <TreeView DockPanel.Dock="Bottom"
                                              ItemsSource="{Binding TreeViewModels}"
                                              TreeViewAttach.IsSelectWithMouseRightDown="True"
                                              TreeViewAttach.SelectedItem="{Binding TreeViewSelectedItem}"
                                              TreeViewAttach.SelectedItemAttach="True"
                                              VirtualizingPanel.IsVirtualizing="True"
                                              VirtualizingPanel.VirtualizationMode="Recycling">
                                        <TreeView.ItemContainerStyle>
                                            <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="TreeViewItem">
                                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                                <Setter Property="ContextMenu">
                                                    <Setter.Value>
                                                        <ContextMenu>
                                                            <MenuItem Command="{x:Static local:TreeViewModel.StartRenameCommand}"
                                                                      CommandParameter="{Binding}"
                                                                      Header="重命名" />
                                                            <MenuItem Command="{x:Static local:TreeViewModel.DeleteFileCommand}"
                                                                      CommandParameter="{Binding}"
                                                                      Header="移动到回收站" />
                                                            <MenuItem Command="{x:Static local:TreeViewModel.ShowPropertiesCommand}"
                                                                      CommandParameter="{Binding}"
                                                                      Header="属性" />
                                                        </ContextMenu>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </TreeView.ItemContainerStyle>
                                        <TreeView.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Click="MenuItem_Click_2" Header="导入文件夹" />
                                                <!--<MenuItem Click="MenuItem_Click_3" Header="展开全部文件" />
                                                <MenuItem Click="MenuItem_Click_4" Header="收起全部文件" />-->
                                            </ContextMenu>
                                        </TreeView.ContextMenu>
                                        <TreeView.ItemTemplate>
                                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                                <DockPanel MouseDownAttach.Command="{x:Static local:TreeViewModel.OpenFileCommand}"
                                                           MouseDownAttach.CommandParameter="{Binding}"
                                                           MouseDownAttach.IgnoreElement="TextBoxView"
                                                           MouseDownAttach.MouseClickCount="2"
                                                           MouseDownAttach.MouseClickMode="Left"
                                                           ToolTip="{Binding FullPath}">
                                                    <Image Height="{Binding ElementName=Header, Path=ActualHeight}"
                                                           Margin="2,0,4,0"
                                                           Source="{Binding IconImageSource}" />
                                                    <TextBlock Name="Header"
                                                               HorizontalAlignment="Left"
                                                               Text="{Binding Header}"
                                                               Visibility="{Binding IsEditing, Converter={StaticResource BoolToCollapsedConverter}}" />
                                                    <TextBox Padding="0"
                                                             HorizontalAlignment="Left"
                                                             BorderThickness="0"
                                                             Text="{Binding Header}"
                                                             Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="LostFocus">
                                                                <i:InvokeCommandAction Command="{x:Static local:TreeViewModel.EndRenameCommand}" CommandParameter="{Binding}" />
                                                            </i:EventTrigger>
                                                            <i:DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TextBox}, Path=IsVisible}" Value="true">
                                                                <i:InvokeCommandAction Command="{x:Static local:TreeViewModel.RenameVisibleCommand}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}" />
                                                            </i:DataTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                </DockPanel>
                                            </HierarchicalDataTemplate>
                                        </TreeView.ItemTemplate>
                                    </TreeView>
                                </DockPanel>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="ListView" ToolTip="This is a ListView">
                                <ListView ItemsSource="{Binding Result}">
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn Width="50"
                                                            DisplayMemberBinding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}, Converter={StaticResource ListViewIndexConverter}}"
                                                            Header="序号" />
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V0}" Header="V0" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V1}" Header="V1" />
                                            <GridViewColumn DisplayMemberBinding="{Binding RX}" Header="RX" />
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="ListBox" ToolTip="This is a ListView">
                                <ListBox BorderBrush="Transparent"
                                         BorderThickness="0"
                                         ItemsSource="{EnumBindingSource EnumType=local:UserPermission}"
                                         SelectionMode="Multiple" />
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="PropertyGrid" ToolTip="This is a PropertyGrid">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <PropertyGrid SelectedObject="{Binding SelectedObject}" />
                                    <Button Grid.Row="1" Click="Button_Click_3">显示InstrumentType选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_7">SelectedObject=MainWindow</Button>
                                </Grid>
                            </LayoutAnchorable>
                        </LayoutAnchorablePane>
                    </LayoutAnchorablePaneGroup>
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>
        <StatusBar Grid.Row="1" Padding="4">
            <StatusBar.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                </Style>
            </StatusBar.Resources>
            <PackIcon Kind="MessageBulleted" />
            <Button Width="Auto"
                    Margin="4,0"
                    Click="Button_Click_4">
                切换状态
            </Button>
            <StatusBarItem Content="{Binding StatusBarContent}" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Button Margin="4,0"
                            Command="{Binding ZoomInCommand}"
                            Content="-" />
                    <Button Command="{Binding ZoomOutCommand}" Content="+" />
                    <TextBlock Margin="4,0" Text="{Binding WindowScale, StringFormat={}{0:P1}}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</ChromeWindow>