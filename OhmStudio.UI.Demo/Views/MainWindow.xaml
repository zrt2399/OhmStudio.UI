<ChromeWindow x:Class="OhmStudio.UI.Demo.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
              xmlns:converters="clr-namespace:OhmStudio.UI.Demo.Converters"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:hc="https://handyorg.github.io/handycontrol"
              xmlns:local="clr-namespace:OhmStudio.UI.Demo"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:oxy="http://oxyplot.org/wpf"
              xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
              xmlns:views="clr-namespace:OhmStudio.UI.Demo.Views"
              Title="{x:Static local:App.Name}"
              Width="1280"
              Height="720"
              d:DataContext="{d:DesignInstance Type=views:MainWindow}"
              BorderAttach.CornerRadius="2"
              Icon="/icon.ico"
              IsShowIcon="True"
              IsShowTitle="True"
              ResizeMode="CanResizeWithGrip"
              SnapsToDevicePixels="{Binding IsAntiAliasing}"
              UseLayoutRounding="{Binding IsAntiAliasing}"
              WindowStartupLocation="CenterScreen"
              mc:Ignorable="d">

    <Window.LayoutTransform>
        <ScaleTransform ScaleX="{Binding WindowScale}" ScaleY="{Binding WindowScale}" />
    </Window.LayoutTransform>

    <Window.Resources>
        <converters:GroupItemConverter x:Key="GroupItemConverter" />
    </Window.Resources>

    <ChromeWindow.LeftWindowCommands>
        <StackPanel Orientation="Horizontal">
            <ToolBarTray VerticalAlignment="Center">
                <ToolBar BandIndex="1">
                    <Button Content="1" ToolTip="新建项目" />
                    <TextBox>新建项目</TextBox>
                    <RadioButton>选择</RadioButton>
                    <CheckBox IsChecked="{Binding IsAntiAliasing}">抗锯齿</CheckBox>
                    <Button Content="2" ToolTip="打开文件" />
                    <Separator />
                    <Button Content="3" ToolTip="保存当前文件" />
                    <Separator />
                    <Button Content="4" ToolTip="保存当前文件" />
                </ToolBar>
                <ToolBar BandIndex="2">
                    <Button Content="5" ToolTip="新建项目" />

                    <Button Content="6" ToolTip="打开文件" />
                    <Separator />
                    <Button Content="7" ToolTip="保存当前文件" />
                    <Separator />
                    <Button Content="8" ToolTip="保存当前文件" />
                </ToolBar>
            </ToolBarTray>
            <SearchBar TextBoxAttach.PlaceHolder="请输入搜索内容..." TextBoxAttach.Title="搜索" />
            <CheckComboBox />
        </StackPanel>
    </ChromeWindow.LeftWindowCommands>

    <ChromeWindow.RightWindowCommands>
        <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
            <Border VerticalAlignment="Center" IsHitTestVisible="False">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SystemColorsWindowPanel}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock Margin="4"
                           HorizontalAlignment="Center"
                           FontWeight="Bold"
                           Text="{Binding Title, RelativeSource={RelativeSource AncestorType=Window}}">
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource EnvironmentMainWindowInactiveCaptionText}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
            <ComboBox Margin="6,0"
                      ItemsSource="{Binding FontSizeList}"
                      SelectedItem="{Binding CurrentFontSize}"
                      TextBoxAttach.Title="字体大小：" />
            <ComboBox ItemsSource="{Binding FontFamilyList}"
                      SelectedItem="{Binding CurrentFontFamily}"
                      TextBoxAttach.Title="字体：" />
            <ComboBox Margin="6,0"
                      DisplayMemberPath="Name"
                      ItemsSource="{x:Static views:ThemeCollection.AllThemes}"
                      SelectedItem="{Binding CurrentTheme}"
                      TextBoxAttach.Title="主题：" />
            <Border Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"
                    Background="Purple"
                    CornerRadiusAttach.IsCircular="True">
                <TextBlock HorizontalAlignment="Center" Foreground="White">ad</TextBlock>
            </Border>
            <Button Margin="6,0,0,0" Click="Button_Click_5">登录</Button>
        </StackPanel>

    </ChromeWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DockingManager x:Name="dockingManager"
                        AutoHideDelay="0"
                        DocumentWrapPanelAttach.IsWrap="True"
                        ShowSystemMenu="False">
            <LayoutRoot>
                <LayoutPanel Orientation="Horizontal">
                    <LayoutDocumentPaneGroup>
                        <LayoutDocumentPane>
                            <LayoutDocument Title="Button">
                                <UniformGrid>
                                    <Button Click="Button_Click">Click Me</Button>
                                    <Button Click="Button_Click_1">AlertDialog</Button>
                                    <Button Click="Button_Click_2">GC</Button>
                                    <UniformGrid Columns="1" Rows="5">
                                        <Button Click="Button_Click_9">UIMessageTip.Show</Button>
                                        <Button Click="Button_Click_10">UIMessageTip.ShowOk</Button>
                                        <Button Click="Button_Click_11">UIMessageTip.ShowWarning</Button>
                                        <Button Click="Button_Click_12">UIMessageTip.ShowError</Button>
                                        <Button Click="Button_Click_13">UIMessageTip.ShowErrorMultiLine</Button>
                                    </UniformGrid>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="DataGrid">
                                <UniformGrid x:Name="da"
                                             Columns="1"
                                             Rows="3">
                                    <UniformGrid.Resources>
                                        <CollectionViewSource x:Key="ItemCollectionViewSource"
                                                              IsLiveGroupingRequested="True"
                                                              IsLiveSortingRequested="True"
                                                              Source="{Binding FileNodes}">
                                            <CollectionViewSource.GroupDescriptions>
                                                <PropertyGroupDescription PropertyName="Name" />

                                            </CollectionViewSource.GroupDescriptions>
                                            <CollectionViewSource.SortDescriptions>
                                                <!--  Requires 'xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"' declaration.  -->
                                                <scm:SortDescription PropertyName="Name" />
                                                <scm:SortDescription PropertyName="Value" />
                                                <scm:SortDescription PropertyName="Description" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>
                                    </UniformGrid.Resources>
                                    <DataGrid AutoGenerateColumns="False"
                                              CanUserAddRows="False"
                                              DataGridAttach.IsSelectionChangedUpdateRowNumber="True"
                                              DataGridAttach.IsShowRowNumber="True"
                                              DataGridAttach.TextColumnEditingElementStyle="{StaticResource TextColumnEditingElementStyle}"
                                              DataGridAttach.TextColumnElementStyle="{StaticResource {x:Type TextBlock}}"
                                              ItemsSource="{Binding Source={StaticResource ItemCollectionViewSource}}"
                                              VirtualizingPanel.IsVirtualizing="True"
                                              VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                              VirtualizingPanel.VirtualizationMode="Recycling">
                                        <!--  定义需要显示的列  -->
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                            <!--<DataGridTemplateColumn Header="密码" >
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <PasswordTextBox Password="{Binding Value}" BorderThickness="0"/>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>-->
                                            <DataGridTextColumn Binding="{Binding Value}" Header="Value" />
                                            <DataGridTextColumn Binding="{Binding Description}"
                                                                DataGridAttach.IsIgnoreElementStyle="True"
                                                                ElementStyle="{StaticResource TextBlockPassword}"
                                                                Header="Description" />
                                        </DataGrid.Columns>
                                        <DataGrid.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="GroupItem">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="GroupItem">
                                                                    <Expander Background="{DynamicResource DataGridGroupItemHeaderBackground}" IsExpanded="{Binding Path=Items[0].IsExpanded, FallbackValue=True, TargetNullValue=True}">
                                                                        <Expander.Header>
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <TextBlock Margin="0,0,20,0" Text="{Binding Path=Name, StringFormat=分组：{0}}" />
                                                                                <TextBlock Text="{Binding Path=ItemCount, StringFormat=数量：{0}}" />
                                                                            </StackPanel>
                                                                        </Expander.Header>
                                                                        <ItemsPresenter />
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </DataGrid.GroupStyle>
                                        <!--<DataGrid.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Margin" Value="0,0,0,5"/>
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                    <Expander IsExpanded="True" Background="#FF112255" BorderBrush="#FF002255" Foreground="#FFEEEEEE" BorderThickness="1,1,1,5">
                                                                        <Expander.Header>
                                                                            <DockPanel>
                                                                                <TextBlock FontWeight="Bold" Text="{Binding Path=Name}" Margin="5,0,0,0" Width="100"/>
                                                                                <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"/>
                                                                            </DockPanel>
                                                                        </Expander.Header>
                                                                        <Expander.Content>
                                                                            <ItemsPresenter />
                                                                        </Expander.Content>
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.HeaderTemplate>
                                                    <DataTemplate>
                                                        <DockPanel Background="LightBlue">
                                                            <TextBlock Text="{Binding Path=Name }" Foreground="Blue" Margin="30,0,0,0" Width="100"/>
                                                            <TextBlock Text="{Binding Path=ItemCount}" Foreground="Blue"/>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </GroupStyle.HeaderTemplate>
                                            </GroupStyle>
                                        </DataGrid.GroupStyle>-->
                                        <DataGrid.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Click="MenuItem_Click" Header="全部展开" />
                                                <MenuItem Click="MenuItem_Click_1" Header="全部折叠" />
                                            </ContextMenu>
                                        </DataGrid.ContextMenu>
                                    </DataGrid>
                                    <DataGrid DataGridAttach.IsShowRowNumber="True"
                                              ItemsSource="{Binding FileNodes}"
                                              RowDetailsVisibilityMode="VisibleWhenSelected"
                                              ScrollViewerAttach.Orientation="Horizontal">
                                        <DataGrid.RowDetailsTemplate>
                                            <DataTemplate>
                                                <DropShadowControl Margin="4"
                                                                   Background="Orange"
                                                                   ShadowColor="Orange">
                                                    <TextBlock Text="{Binding InstrumentType}" />
                                                </DropShadowControl>
                                            </DataTemplate>
                                        </DataGrid.RowDetailsTemplate>
                                    </DataGrid>
                                    <DataGrid AutoGenerateColumns="False"
                                              CanUserAddRows="False"
                                              DataGridAttach.CheckBoxColumnEditingElementStyle="{StaticResource {x:Type CheckBox}}"
                                              DataGridAttach.CheckBoxColumnElementStyle="{StaticResource {x:Type CheckBox}}"
                                              DataGridAttach.ComboBoxColumnEditingElementStyle="{StaticResource {x:Type ComboBox}}"
                                              DataGridAttach.ComboBoxColumnElementStyle="{StaticResource {x:Type ComboBox}}"
                                              DataGridAttach.IsShowRowNumber="True"
                                              DataGridAttach.TextColumnEditingElementStyle="{StaticResource TextColumnEditingElementStyle}"
                                              DataGridAttach.TextColumnElementStyle="{StaticResource {x:Type TextBlock}}"
                                              ItemsSource="{Binding FileNodes}"
                                              SelectionUnit="CellOrRowHeader">
                                        <DataGrid.Columns>
                                            <!--<DataGridHyperlinkColumn Header="Header" Binding="{Binding Name}"></DataGridHyperlinkColumn>-->
                                            <DataGridTextColumn Binding="{Binding Name}" Header="Name" />
                                            <DataGridCheckBoxColumn Binding="{Binding IsExpanded}" Header="IsExpanded" />
                                            <DataGridComboBoxColumn Header="Name1" />

                                        </DataGrid.Columns>
                                    </DataGrid>
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="RollBox">
                                <!--<hc:Carousel>
                                     添加轮播项
                                    <hc:CarouselItem>
                                         轮播项内容
                                    </hc:CarouselItem>
                                    <hc:CarouselItem>
                                        <Image Source="icon.ico"/>
                                         轮播项内容
                                    </hc:CarouselItem>
                                     可以添加更多轮播项
                                </hc:Carousel>-->
                                <RollBox>
                                    <RollBox.Items>
                                        <Image Source="/Images/1.jpg" />
                                        <Image Source="/Images/1a.jpg" />
                                        <Image Source="/Images/2.jpg" />
                                        <Image Source="/Images/2a.jpg" />
                                        <Image Source="/Images/3.jpg" />
                                        <Image Source="/Images/3a.jpg" />
                                    </RollBox.Items>
                                </RollBox>
                            </LayoutDocument>
                            <LayoutDocument Title="TextEditor">
                                <TabControl>
                                    <TabItem Header="XML">
                                        <avalonEdit:TextEditor x:Name="textEditor"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="XML" />
                                    </TabItem>
                                    <TabItem Header="C#">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <avalonEdit:TextEditor x:Name="textEditorcs"
                                                                   ShowLineNumbers="True"
                                                                   SyntaxHighlighting="C#" />
                                            <Button Grid.Row="1" Click="Button_Click_7">执行</Button>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="C++">
                                        <avalonEdit:TextEditor x:Name="textEditorcp"
                                                               ShowLineNumbers="True"
                                                               SyntaxHighlighting="C++" />
                                    </TabItem>
                                </TabControl>
                            </LayoutDocument>
                            <LayoutDocument Title="Other"
                                            Description="其他"
                                            IsSelected="True"
                                            ToolTip="Other">
                                <Grid>
                                    <!--<Grid>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0.499,1"
                                 EndPoint="0.5,1"
                                 x:Name="BasicBrush">
                                                    <GradientStop Color="#08000000"
                              Offset="0.0" />
                                                    <GradientStop Color="#03000000"
                              Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation Storyboard.TargetName="BasicBrush"
                                        Storyboard.TargetProperty="StartPoint"
                                        From="0.0,1"
                                        To="1,1"
                                        Duration="0:0:40"
                                        FillBehavior="HoldEnd"
                                        AutoReverse="True"
                                        RepeatBehavior="Forever" />
                                                            <PointAnimation Storyboard.TargetName="BasicBrush"
                                        Storyboard.TargetProperty="EndPoint"
                                        From="0.001,1"
                                        To="1,1"
                                        Duration="0:0:40"
                                        FillBehavior="HoldEnd"
                                        AutoReverse="True"
                                        RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="0.499,1"
                                 EndPoint="0.5,1"
                                 x:Name="ThirdBrush">
                                                    <GradientStop Color="#08000000"
                              Offset="0.0" />
                                                    <GradientStop Color="#03000000"
                              Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation Storyboard.TargetName="ThirdBrush"
                                        Storyboard.TargetProperty="StartPoint"
                                        From="1,1"
                                        To="0.0,1"
                                        Duration="0:0:15"
                                        FillBehavior="HoldEnd"
                                        RepeatBehavior="Forever" />
                                                            <PointAnimation Storyboard.TargetName="ThirdBrush"
                                        Storyboard.TargetProperty="EndPoint"
                                        From="1,1"
                                        To="0.001,1"
                                        Duration="0:0:15"
                                        FillBehavior="HoldEnd"
                                        RepeatBehavior="Forever" />
                                                            <PointAnimation Storyboard.TargetName="ThirdBrush"
                                        Storyboard.TargetProperty="EndPoint"
                                        From="1,1"
                                        To="0.0,1"
                                        BeginTime="0:0:15"
                                        Duration="0:0:15"
                                        FillBehavior="HoldEnd"
                                        RepeatBehavior="Forever" />
                                                            <PointAnimation Storyboard.TargetName="ThirdBrush"
                                        Storyboard.TargetProperty="StartPoint"
                                        From="1,1"
                                        To="0.001,1"
                                        BeginTime="0:0:15"
                                        Duration="0:0:15"
                                        FillBehavior="HoldEnd"
                                        RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <Rectangle>
                                            <Rectangle.Fill>
                                                <LinearGradientBrush StartPoint="1,0.499"
                                 EndPoint="1,0.5"
                                 x:Name="SecondBrush">
                                                    <GradientStop Color="#02000000"
                              Offset="0.0" />
                                                    <GradientStop Color="#07000000"
                              Offset="1.0" />
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Rectangle.Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <PointAnimation Storyboard.TargetName="SecondBrush"
                                        Storyboard.TargetProperty="StartPoint"
                                        From="1,1"
                                        To="1,0"
                                        Duration="0:0:20"
                                        FillBehavior="HoldEnd"
                                        AutoReverse="True"
                                        RepeatBehavior="Forever" />
                                                            <PointAnimation Storyboard.TargetName="SecondBrush"
                                        Storyboard.TargetProperty="EndPoint"
                                        From="1,1"
                                        To="1,0.001"
                                        Duration="0:0:20"
                                        FillBehavior="HoldEnd"
                                        AutoReverse="True"
                                        RepeatBehavior="Forever" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                    </Grid>-->
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel Name="wr"
                                                    IsEnabled="True"
                                                    Orientation="Vertical">
                                            <DateTimePicker VerticalAlignment="Top" TextBoxAttach.PlaceHolder="请输入日期...">
                                                <TextBoxAttach.Title>
                                                    <TextBox>123</TextBox>
                                                </TextBoxAttach.Title>
                                            </DateTimePicker>
                                            <DateTimePicker Name="se"
                                                            TextBoxAttach.PlaceHolder="请输入密码"
                                                            TextBoxAttach.PlaceHolderIsHitTestVisible="True">
                                                <TextBoxAttach.Title>
                                                    <TextBlock>密码</TextBlock>
                                                    <!--<iconPacks:PackIconModern Kind="InterfacePassword" Margin="0,0,4,0" Height="{Binding ElementName=dateTimePickerUserPassword1,Path=ActualHeight}"  />-->
                                                </TextBoxAttach.Title>
                                            </DateTimePicker>
                                            <SearchBar VerticalAlignment="Top"
                                                       HorizontalContentAlignment="Right"
                                                       VerticalContentAlignment="Bottom"
                                                       TextBoxAttach.PlaceHolder="请输入搜索内容..."
                                                       TextBoxAttach.TitleIsHitTestVisible="True">
                                                <TextBoxAttach.Title>
                                                    <Button>搜索</Button>
                                                </TextBoxAttach.Title>
                                            </SearchBar>
                                            <TextBox VerticalAlignment="Top"
                                                     TextBoxAttach.PlaceHolder="123456..."
                                                     TextBoxAttach.Title="开始" />
                                            <TextBox VerticalAlignment="Top"
                                                     IsEnabled="True"
                                                     Text="{Binding CurrentDateTime, Mode=TwoWay}">
                                                <TextBoxAttach.Title>
                                                    <TextBlock>ButtonTitle</TextBlock>
                                                </TextBoxAttach.Title>
                                                <TextBoxAttach.PlaceHolder>
                                                    <TextBlock>ButtonPlaceHolder</TextBlock>
                                                </TextBoxAttach.PlaceHolder>
                                            </TextBox>
                                            <PasswordBox VerticalAlignment="Top" TextBoxAttach.PlaceHolder="密码" />
                                            <PasswordTextBox VerticalAlignment="Top" TextBoxAttach.PlaceHolder="请输入密码...">
                                                <TextBoxAttach.Title>
                                                    <TextBlock>ButtonTitle</TextBlock>
                                                </TextBoxAttach.Title>
                                            </PasswordTextBox>
                                            <PasswordTextBox VerticalAlignment="Top" TextBoxAttach.PlaceHolder="请输入密码1...">
                                                <TextBoxAttach.Title>
                                                    <TextBlock>搜索</TextBlock>
                                                </TextBoxAttach.Title>
                                            </PasswordTextBox>

                                            <ComboBox VerticalAlignment="Top"
                                                      DisplayMemberPath="Name"
                                                      ItemsSource="{Binding FileNodes}"
                                                      TextBoxAttach.PlaceHolderIsHitTestVisible="True"
                                                      TextBoxAttach.TitleIsHitTestVisible="True">
                                                <TextBoxAttach.Title>
                                                    <Button>中文</Button>
                                                </TextBoxAttach.Title>
                                                <TextBoxAttach.PlaceHolder>
                                                    <Button>请输入..</Button>
                                                </TextBoxAttach.PlaceHolder>
                                            </ComboBox>
                                            <ComboBox HorizontalContentAlignment="Right"
                                                      DisplayMemberPath="Name"
                                                      IsEditable="True"
                                                      ItemsSource="{Binding FileNodes}"
                                                      TextBoxAttach.PlaceHolder="请输入..."
                                                      TextBoxAttach.Title="输出" />
                                            <CheckComboBox VerticalAlignment="Top"
                                                           HorizontalContentAlignment="Right"
                                                           DisplayMemberPath="Description"
                                                           ItemsSource="{Binding FileNodes}"
                                                           SelectedItems="{Binding SelectedItemsFileNodes, Mode=TwoWay}"
                                                           Separator=";"
                                                           StringFormat="分组{0}"
                                                           TextBoxAttach.Title="搜索"
                                                           VirtualizingPanel.ScrollUnit="Pixel" />
                                            <ToggleButton IsChecked="True"
                                                          IsEnabled="True"
                                                          Style="{StaticResource ToggleButtonStyle}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical">
                                            <DateTimePicker VerticalAlignment="Top"
                                                            SelectedDateTime="{Binding CurrentDateTime, Mode=TwoWay}"
                                                            TextBoxAttach.PlaceHolder="请输入日期..."
                                                            TextBoxAttach.Title="结束：" />
                                            <ComboBox VerticalAlignment="Top"
                                                      DisplayMemberPath="Name"
                                                      ItemsSource="{Binding FileNodes}"
                                                      TextBoxAttach.Title="搜索" />
                                            <PasswordBox VerticalAlignment="Top"
                                                         TextBoxAttach.PlaceHolder="密码"
                                                         TextBoxAttach.Title="技术" />
                                            <PasswordTextBox VerticalAlignment="Top" TextBoxAttach.PlaceHolder="请输入密码..." />
                                            <PasswordTextBox VerticalAlignment="Top" TextBoxAttach.Title="搜索" />

                                            <ComboBox VerticalAlignment="Top"
                                                      DisplayMemberPath="Name"
                                                      IsEditable="True"
                                                      ItemsSource="{Binding FileNodes}" />
                                            <SearchBar VerticalAlignment="Top"
                                                       TextBoxAttach.PlaceHolder="请输入搜索内容..."
                                                       TextBoxAttach.Title="搜索" />
                                            <TextBox Margin="4"
                                                     VerticalAlignment="Top"
                                                     BorderThickness="0,0,0,2"
                                                     TextBoxAttach.Title="开始" />
                                            <TextBox Margin="4"
                                                     VerticalAlignment="Top"
                                                     Text="{Binding CurrentDateTime}"
                                                     TextBoxAttach.PlaceHolder="time..." />

                                            <Button Margin="4"
                                                    Padding="4"
                                                    HorizontalContentAlignment="Left"
                                                    Style="{StaticResource ClassicButton}">
                                                ClassicButton
                                            </Button>
                                            <Button Margin="4"
                                                    Padding="4"
                                                    HorizontalContentAlignment="Center"
                                                    Style="{StaticResource DefaultButton}">
                                                DefaultButton
                                            </Button>
                                            <Button Margin="4"
                                                    Padding="4"
                                                    HorizontalContentAlignment="Right"
                                                    Style="{StaticResource FlatButtonGreen}">
                                                FlatButtonGreen
                                            </Button>
                                            <Button Margin="4"
                                                    Padding="4"
                                                    HorizontalContentAlignment="Center"
                                                    Style="{StaticResource FlatButtonRed}">
                                                FlatButtonRed
                                            </Button>
                                            <TextBox Text="{Binding CurrentDateTime}" TextBoxAttach.PlaceHolder="time..." />
                                        </StackPanel>
                                    </StackPanel>

                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="ProgressBar">
                                <UniformGrid Columns="2" Rows="3">
                                    <ProgressBar Width="400"
                                                 Height="50"
                                                 VerticalAlignment="Center"
                                                 IsIndeterminate="True"
                                                 Style="{x:Null}"
                                                 Value="50" />

                                    <ProgressBar Width="400"
                                                 Height="50"
                                                 VerticalAlignment="Center"
                                                 IsIndeterminate="True"
                                                 Value="50" />
                                    <CircularProgressBar BorderBrush="#FF06B025" Value="40" />
                                    <CircularProgressBar Title="进度"
                                                         HorizontalContentAlignment="Left"
                                                         VerticalContentAlignment="Top"
                                                         Value="60" />
                                    <CircularProgressBar BorderBrush="{DynamicResource ProgressBarProgress}" Value="50" />
                                </UniformGrid>
                            </LayoutDocument>
                            <LayoutDocument Title="DocumentWrapPanel">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Button Click="Button_Click_8">换行/不换行</Button>
                                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                        <DocumentWrapPanel x:Name="documentWrapPanel" VerticalAlignment="Top">
                                            <DocumentWrapPanel.Resources>
                                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                                                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                                    <Setter Property="Height" Value="100" />
                                                    <Setter Property="Width" Value="100" />
                                                    <Setter Property="Margin" Value="10" />
                                                </Style>
                                            </DocumentWrapPanel.Resources>
                                            <Button>1</Button>
                                            <Button>2</Button>
                                            <Button>3</Button>
                                            <Button>4</Button>
                                            <Button>5</Button>
                                            <Button>6</Button>
                                            <Button>7</Button>
                                            <Button>8</Button>
                                            <Button>9</Button>
                                        </DocumentWrapPanel>
                                    </ScrollViewer>
                                    <TextBlock Grid.Row="2" Text="{Binding ElementName=documentWrapPanel, Path=IsWrap, StringFormat=是否换行：{0}}" />
                                </Grid>
                            </LayoutDocument>
                            <LayoutDocument Title="GifImage">
                                <UniformGrid Columns="2" Rows="2">
                                    <UniformGrid.Resources>
                                        <Style BasedOn="{StaticResource {x:Type GifImage}}" TargetType="GifImage">
                                            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                                            <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                                        </Style>
                                    </UniformGrid.Resources>
                                    <GroupBox Margin="10" Header="本地">
                                        <GifImage BorderBrush="Green"
                                                  BorderThickness="2"
                                                  Source="/Images/car_chase.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络">
                                        <GifImage BorderBrush="Orange"
                                                  BorderThickness="10"
                                                  Source="https://img.lanrentuku.com/img/allimg/1206/5-120601152054-50.gif" />
                                    </GroupBox>
                                    <GroupBox Margin="10" Header="网络">
                                        <GifImage BorderBrush="YellowGreen"
                                                  BorderThickness="20"
                                                  Source="https://img.lanrentuku.com/img/allimg/1212/5-121204193Q8.gif" />
                                    </GroupBox>
                                    <!--<Image ImageBehavior.AnimatedSource="/Images/car_chase.gif"/>-->
                                    <!--<hc:GifImage Uri="/Images/car_chase.gif"  />-->
                                </UniformGrid>

                            </LayoutDocument>
                            <LayoutDocument Title="UserInfos">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <DataGrid DataGridAttach.IsShowRowNumber="True"
                                              ItemsSource="{Binding UserInfos}"
                                              SelectorAttach.SelectedItems="{Binding UserInfoSelectedItems, Mode=TwoWay}"
                                              SelectorAttach.SelectedItemsAttach="True" />
                                    <Button Grid.Row="1" Command="{Binding StartCommand}">显示选中项</Button>
                                    <Button Grid.Row="2" Click="Button_Click_6">禁用/启用</Button>
                                </Grid>

                            </LayoutDocument>
                            <LayoutDocument Title="GroupBox">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <GroupBox Margin="10"
                                              Background="Orange"
                                              BorderBrush="Blue"
                                              DropShadowAttach.ShadowColor="Orange"
                                              Header="GroupBox">
                                        <TextBox BorderThickness="0" />
                                    </GroupBox>
                                    <DropShadowControl Grid.Row="1"
                                                       Margin="10"
                                                       Background="OrangeRed"
                                                       BlurRadius="40"
                                                       BorderBrush="Gray"
                                                       BorderThickness="2"
                                                       CornerRadius="10"
                                                       ShadowColor="IndianRed"
                                                       ShadowDepth="0">
                                        <TextBox Margin="10">TextBox</TextBox>
                                    </DropShadowControl>
                                    <Border Grid.Row="2"
                                            Margin="10"
                                            Background="Green" />
                                </Grid>

                            </LayoutDocument>
                            <LayoutDocument Title="CheckComboBox" CanClose="False">
                                <StackPanel Orientation="Horizontal">
                                    <ComboBox VerticalAlignment="Top"
                                              DisplayMemberPath="Name"
                                              IsEditable="True"
                                              ItemsSource="{Binding FileNodes}" />
                                    <CheckComboBox VerticalAlignment="Top"
                                                   DisplayMemberPath="Name"
                                                   ItemsSource="{Binding FileNodes}" />
                                    <RadioButton>123</RadioButton>
                                    <RadioButton>456</RadioButton>
                                    <CheckBox VerticalAlignment="Top" IsChecked="{x:Null}" />
                                    <ComboBox VerticalAlignment="Top"
                                              DisplayMemberPath="Name"
                                              ItemsSource="{Binding FileNodes}" />
                                    <ComboBox VerticalAlignment="Top"
                                              DisplayMemberPath="Name"
                                              ItemsSource="{Binding FileNodes}" />
                                    <TextBox Width="400"
                                             VerticalAlignment="Top"
                                             Text="{Binding CurrentDateTime}" />
                                    <ToggleButton Style="{StaticResource ToggleButtonStyle}" />
                                    <CircularProgressBar Title="abcdefg" Value="50" />
                                </StackPanel>

                            </LayoutDocument>
                        </LayoutDocumentPane>
                    </LayoutDocumentPaneGroup>
                    <LayoutAnchorablePaneGroup DockWidth="400">
                        <LayoutAnchorablePane>
                            <LayoutAnchorable Title="数据网格" ToolTip="ListView.ListView">
                                <ListView ItemsSource="{Binding Result}">

                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn DisplayMemberBinding="{Binding Time}" Header="Time" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V0}" Header="V0" />
                                            <GridViewColumn DisplayMemberBinding="{Binding V1}" Header="V1" />
                                            <GridViewColumn DisplayMemberBinding="{Binding RX}" Header="RX" />
                                        </GridView>
                                    </ListView.View>
                                    <ListView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                            <MenuItem Header="Zxc" />
                                        </ContextMenu>
                                    </ListView.ContextMenu>
                                </ListView>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="ListBox" ToolTip="ListBox.ListBox">
                                <ListBox BorderBrush="Transparent"
                                         BorderThickness="0"
                                         SelectionMode="Multiple">
                                    <ListBoxItem>123123123</ListBoxItem>
                                    <ListBoxItem>456456456</ListBoxItem>
                                    <ListBoxItem>789789789</ListBoxItem>
                                    <ListBoxItem>123123123</ListBoxItem>
                                    <ListBoxItem>456456456</ListBoxItem>
                                    <ListBoxItem>789789789</ListBoxItem>
                                    <ListBoxItem>123123123</ListBoxItem>
                                    <ListBoxItem>456456456</ListBoxItem>
                                    <ListBoxItem>789789789</ListBoxItem>
                                </ListBox>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="PropertyGrid">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <PropertyGrid SelectedObject="{Binding Items}" />
                                    <Button Grid.Row="1" Click="Button_Click_3">显示InstrumentType选中项</Button>
                                </Grid>
                            </LayoutAnchorable>
                            <LayoutAnchorable Title="TreeView">
                                <TreeView Name="treeView"
                                          VirtualizingPanel.IsVirtualizing="True"
                                          VirtualizingPanel.VirtualizationMode="Recycling">
                                    <TreeView.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Click="MenuItem_Click_2" Header="导入文件夹" />
                                        </ContextMenu>
                                    </TreeView.ContextMenu>
                                </TreeView>
                            </LayoutAnchorable>
                        </LayoutAnchorablePane>
                    </LayoutAnchorablePaneGroup>
                </LayoutPanel>
            </LayoutRoot>
        </DockingManager>
        <StatusBar Grid.Row="1" Padding="4">
            <StatusBar.Resources>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                    <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}" />
                    <Setter Property="Padding" Value="0" />
                    <Setter Property="CornerRadiusAttach.IsCircular" Value="True" />
                </Style>
            </StatusBar.Resources>

            <Button Width="Auto" Click="Button_Click_4">切换状态</Button>
            <StatusBarItem x:Name="status"
                           Margin="4,0"
                           Content="Ready" />
            <StatusBarItem>
                <StackPanel Orientation="Horizontal">
                    <Button Command="{Binding ZoomInCommand}" Content="-" />
                    <Button Margin="4,0"
                            Command="{Binding ZoomOutCommand}"
                            Content="+" />
                    <TextBlock Text="{Binding WindowScale, StringFormat={}{0:P1}}" />
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</ChromeWindow>